# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# tcpip61F src/tcpip/etc/netsvc.conf 1.2 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2002,2008 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)43        1.2  src/tcpip/etc/netsvc.conf, tcp_apps, tcpip61F, 0828A_61F 5/30/08 00:12:50
# IBM_PROLOG_END_TAG 

# The /etc/netsvc.conf file is used to specify the ordering of name resolution for 
# gethostbyname, gethostbyname2, gethostbyaddr routines
# and alias resolution for the sendmail command. 
# Any host setting defined in /etc/netsvc.conf file will override the default host order 
# and the host setting given in the /etc/irs.conf file. 
# The environment variable NSORDER overrides the host settings in the /etc/netsvc.conf file, 
# which in turn overrides the host settings in the /etc/irs.conf file. 
#
# To specify the host ordering, enter the following:
# hosts = value [, value]
#
# Use one or more of the following values for the hosts keyword:
# auth        Designates the specified server as authoritative. A resolver does not continue searching 
#             for host names further than an authoritative server. For example, 
#             when two services are given as values for the host keyword and the first service 
#             is made authoritative, and if the resolver cannot find the host name in the
#             authoritative service, then the resolver terminates its search. However, 
#             the auth option has no effect if the resolver is unable to contact 
#             the authoritative server; in this case, the resolver continues to search the next
#             service given in the same entry. 
#             Indicate that the specified service is authoritative by following it by an = and then auth.
#             The auth option is only valid when used in conjunction with a service value for the hosts keyword.
#
# bind        Uses BIND/DNS services for resolving names 
# local       Searches the local /etc/hosts file for resolving names 
# nis         Uses NIS services for resolving names. NIS must be running if you specify this option 
# nis+        Uses NIS plus services for resolving names. NIS plus must be running if you specify this option
# ldap        Uses LDAP services for resolving names 
# nis_ldap    Uses LDAP NIS services for resolving names
# bind4       Uses BIND/DNS services for resolving only IPv4 addresses 
# bind6       Uses BIND/DNS services for resolving only IPv6 addresses 
# local4      Searches the local /etc/hosts file for resolving only IPv4 addresses 
# local6      Searches the local /etc/hosts file for resolving only IPv6 addresses 
# nis4        Uses NIS services for resolving only IPv4 addresses 
# nis6        Uses NIS services for resolving only IPv6 addresses 
# nis+4       Uses NIS plus services for resolving only IPv4 addresses 
# nis+6       Uses NIS plus services for resolving only IPv6 addresses 
# ldap4       Uses LDAP services for resolving only IPv4 addresses
# ldap6       Uses LDAP services for resolving only IPv6 addresses 
# nis_ldap4   Uses NIS LDAP services for resolving only IPv4 addresses
# nis_ldap6   Uses NIS LDAP services for resolving only IPv6 addresses
# 
# Any value a user specified other than the ones above, is considered as a user option.
# The user option format is: <key>[none|4|6], where<key> is the name of the dynamic loadable module
# that is going to reside under /usr/lib/netsvc/dynload/ directory. 
# The length of the <key> can be between 1 to 8 characters.
# Following the <key> can be nothing, 4, or 6 which represents the address family.
#
# If we configure a user option as "dave4", then there should be a dynamic loadable module 
# "dave.so" under /usr/lib/netsvc/dynload/ directory. 
# "dave4" user option tells the resolver to use /usr/lib/netsvc/dynload/dave.so dynamic loadable module
# to do the name resolution and resolve only IPv4 addresses.
# 
# Example:
# hosts = nis=auth, bind6, dave4
#       
# The sendmail command searches the local /etc/aliases file, or uses NIS if specified for 
# resolving aliases. You can override the default by specifying how to resolve aliases 
# in the /etc/netsvc.conf file. 
# To specify alias ordering to the sendmail command, enter the following: 
# alias = value [, value]
#
# Use one or more of the following values for the alias keyword: 
# files   Searches the local /etc/aliases file for the alias 
# nis     Uses NIS services for resolving alias 
# Example:
# aliases = nis, files
#
hosts = local, bind 

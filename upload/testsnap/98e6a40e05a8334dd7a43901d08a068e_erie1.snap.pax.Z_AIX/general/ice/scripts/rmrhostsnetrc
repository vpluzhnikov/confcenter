#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG         
# This is an automatically generated prolog.  
#                            
# $Source: aix710 bos/usr/lib/security/ice/scripts/rmrhostsnetrc.sh 1$                         
#                                                           
# COPYRIGHT International Business Machines Corp. 2010,2010              
#                                                                      
# Pvalue: p2 
#Licensed Materials - Property of IBM
#
#Restricted Materials of IBM
#
#US Government Users Restricted Rights - Use, duplication or
#disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Origin: 27
#
# sccsid: $Header: @(#) AIX710_area/1 bos/usr/lib/security/ice/scripts/rmrhostsnetrc.sh, libice, aix710, 1010A_710 2010-03-02T17:21:06-06:00$
#
# IBM_PROLOG_END_TAG
#       COMPONENT_NAME: (ICE) rmrhostsnetrc.sh
#       FUNCTIONS:      None
#       ORIGINS:        27
#
#       Syntax:
#               rmrhostsnetrc -{c|e|p}[v] lname toggle
#       Parameters:
#
#               -c      - Check mode
#               -e      - Enforce mode
#               -p      - Preview mode
#               -v      - verbose mode (unimplemented)
#		lname	- File name
#			  rhosts => .rhosts file
#			  netrc => .netrc file
#		toggle  - Boolean
#	 		  false => Disable
#			  true  => Enable
#       OUTPUT:
#               0       - success
#               1       - check/enforce failure
#               2       - usage error
#
#       Description:
#		This script depending upon the security level specified,
#		removes the .rhosts and .netrc files from the user's home
#		directories. This script should be run with superuser privileges.

export PATH=/usr/bin:/usr/sbin:$PATH

###
#Print Usage
###
Usage() {
	ice_status=1
        print "usage: \n
  rmrhostsnetrc -{c|e|p}[v] lname toggle\n" >> log_msg 2>&1
}

###
#Output from Script to the Native Library
###
Script_Output() {
	print -n "$cur_val%$ice_status%"
	cat log_msg
	print
}

###
#Process arguments
###

#Check mode
cflag=0
#Enforce mode
eflag=0
#Preview mode
pflag=0
#Verbose mode
vflag=0

###
#Initialize the Script Output variables
###
cur_val=0
ice_status=0
print -n > log_msg 2>&1

while getopts :cevp OPT
do
        case $OPT in
                c)      cflag=1;;
                e)      eflag=1;;
                v)      vflag=1;;
                p)      pflag=1;;
                ?|:)    Usage
			Script_Output
                        exit 1;;
        esac
done
shift $(($OPTIND -1))

#Enable Verbose
if [[ vflag -eq 1 ]];
then
	set -x
fi

# Need 2 arguments
if [ $# -ne 2 ]
then
        Usage
	Script_Output
        exit 1 
fi

# -c, -e and -p mutually exclusive
((chkflg=cflag+eflag+pflag))
if [[ chkflg -ne 1 ]];
then
        Usage
	Script_Output
        exit 1 
fi

LNAME=$1
STATUS_ARG=$2
TMP=/usr/ice/tmp

if ( [ "$LNAME" != "rhosts" ] && [ "$LNAME" != "netrc" ] )
then
	print "lname must be rhosts or netrc" >> log_msg 2>&1
	Usage
	Script_Output
	exit 1
fi


# Toggle argument must be true or false
if ( [ "$STATUS_ARG" != "true" ] && [ "$STATUS_ARG" != "false" ] )
then
	print "Toggle must be true or false" >> log_msg 2>&1
	Usage
	Script_Output
	exit 1
fi

# Preview mode set-up
if [[ pflag -eq 1 ]];
then
        ECHOPREFIX="echo"
else
        ECHOPREFIX=""
fi

# Create a tmp dir if not exists 
if [[ ! -d /usr/ice/tmp ]]
then
	mkdir -p /usr/ice/tmp
fi

if [ "$LNAME" == "rhosts" ]
then
	FILE=".rhosts"	
else
	FILE=".netrc"

fi

# Check whether .rhosts or .netrc file exists under user's home directory
fexists()
{
	counter=0
	dispuid|while read x
	do
		# Ignore LDAP/NIS user entries
		echo $x | grep ":" >/dev/null 2>&1
		if [ $? -eq 0 ]
		then
			continue;
		fi

		home=`lsuser -a home $x|awk -F "=" '{print $2}'`
		if [ ! -z "$home" ] && [ -e $home/$FILE ]
		then
			counter=1
			if [ "$STATUS_ARG" == "false" ]
			then
				print "\
 $FILE file exists in user $x's home directory" >> log_msg 2>&1
			fi
			
		fi

		if [ ! -z "$TMP" ] && [ -e "$TMP/rmrhostsnetrc_$x.$FILE" ] && \
			[ "$STATUS_ARG" == "true" ] && [ ! -z "$home" ] && \
				[ ! -e $home/$FILE ]
		then
			counter=2
			print "\
 $FILE file does not exit in user $x's home directory" >> log_msg 2>&1
		fi

	done
	return $counter
}

###
#Checking
###

if [[ cflag -eq 1 ]]; 
then
	fexists
	rc=$?

	if [ $rc -ne 1 ]  && [ $rc -eq 2 ] && [ "$STATUS_ARG" == "true" ] 
	then
		print " $FILE file does not exist" >> log_msg 2>&1
		ice_status=2
	elif [ $rc -ne 0 ] && [ $rc -eq 1 ] && [ "$STATUS_ARG" == "false" ]
	then
		print " $FILE file exists" >> log_msg 2>&1
		ice_status=2		# .rhosts/.netrc file exists
	fi
	if [ $rc -eq 1 ]
	then
		cur_val=1
	fi
	Script_Output
	exit 0
fi

###
#Preview/Enforcing
###

dispuid|while read x
do
	# Ignore LDAP/NIS user entries
	echo $x | grep ":" >/dev/null 2>&1
	if [ $? -eq 0 ]
	then
		continue;
	fi

	home=`lsuser -a home $x|awk -F "=" '{print $2}'`

	if [ ! -z "$home" ] && [ -e "$home/$FILE" ] && [ "$STATUS_ARG" == "false" ]
	then
		$ECHOPREFIX mv $home/$FILE $TMP/rmrhostsnetrc_$x.$FILE
	elif [ ! -z "$TMP" ] && [ -e "$TMP/rmrhostsnetrc_$x.$FILE" ] && \
		[ "$STATUS_ARG" == "true" ]
	then
		$ECHOPREFIX mv $TMP/rmrhostsnetrc_$x.$FILE $home/$FILE
	fi
done

Script_Output
exit 0

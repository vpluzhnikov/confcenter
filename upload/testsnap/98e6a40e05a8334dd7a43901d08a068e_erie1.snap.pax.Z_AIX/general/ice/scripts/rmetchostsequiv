#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG         
# This is an automatically generated prolog.  
#                            
# $Source: aix710 bos/usr/lib/security/ice/scripts/rmetchostsequiv.sh 1$                         
#                                                           
# COPYRIGHT International Business Machines Corp. 2010,2010              
#                                                                      
# Pvalue: p2 
#Licensed Materials - Property of IBM
#
#Restricted Materials of IBM
#
#US Government Users Restricted Rights - Use, duplication or
#disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Origin: 27
#
# sccsid: $Header: @(#) AIX710_area/1 bos/usr/lib/security/ice/scripts/rmetchostsequiv.sh, libice, aix710, 1010A_710 2010-03-02T17:21:13-06:00$
#
# IBM_PROLOG_END_TAG
#       COMPONENT_NAME: (ICE) rmetchostsequiv.sh
#       FUNCTIONS:      None
#       ORIGINS:        27
#
#       Syntax:
#               rmetchostsequiv -{c|e|p}[v] rulename toggle
#       Parameters:
#               -c      - Check mode
#               -e      - Enforce mode
#               -p      - Preview mode
#               -v      - verbose mode (unimplemented)
#		toggle  - Boolean
#		 	  false => Disable
#			  true => Enable
#
#       OUTPUT:
#               0       - success
#               1       - check/enforce failure
#               2       - usage error
#
#       Description:
#		This script removes the entries from
#		/etc/hosts.equiv file. This script should be
#		run with superuser privileges.

export PATH=/usr/bin:/usr/sbin:$PATH

###
#Print Usage
###
Usage() {
	ice_status=1
        print "usage: \n
   rmetchostsequiv -{c|e|p}[v] rulename toggle\n" >> log_msg 2>&1
}

###
#Output from Script to the Native Library
###
Script_Output() {
	print -n "$cur_val%$ice_status%"
	cat log_msg
	print
}

###
#Process arguments
###

#Check mode
cflag=0
#Enforce mode
eflag=0
#Preview mode
pflag=0
#Verbose mode
vflag=0

###
#Initialize the Script Output variables
###
cur_val=0
ice_status=0
print -n > log_msg 2>&1

while getopts :cevp OPT
do
        case $OPT in
                c)      cflag=1;;
                e)      eflag=1;;
                v)      vflag=1;;
                p)      pflag=1;;
                ?|:)    Usage
			Script_Output
                        exit 1;;
        esac
done
shift $(($OPTIND -1))

#Enable Verbose
if [[ vflag -eq 1 ]];
then
	set -x
fi

#Need 1 argument(s)
if [[ $# -ne 2 ]];
then
        Usage
	Script_Output
        exit 1 
fi


# -c, -e and -p mutually exclusive
((chkflg=cflag+eflag+pflag))
if [[ chkflg -ne 1 ]];
then
        Usage
	Script_Output
        exit 1 
fi

RULE_NAME=$1
STATUS_ARG=$2
TMP=/usr/ice/tmp/rmetchostsequiv
PID=$$

# Toggle argument must be true or false
if ( [ "$STATUS_ARG" != "true" ] && [ "$STATUS_ARG" != "false" ] )
then
	print "Toggle must be true or false" >> log_msg 2>&1
	Usage
	Script_Output
	exit 1
fi

# Preview mode set-up
if [[ pflag -eq 1 ]];
then
        ECHOPREFIX="echo"
else
        ECHOPREFIX=""
fi

# Create a tmp dir if not exists
if [[ ! -d /usr/ice/tmp ]]
then
	mkdir -p /usr/ice/tmp
fi

###
#Preview/Enforcing
###
if  [ -e /etc/hosts.equiv ]
then
	entries=`awk '$0 !~ /^[\t ]*#/{ print $0}' /etc/hosts.equiv`
	if [ -n "$entries" ] && [[ cflag -eq 1 ]];
	then
		cur_val=1
	fi
	if [ -n "$entries" ] && [ "$STATUS_ARG" == "false" ]
	then
		if [[ cflag -eq 1 ]]; 
		then
			print "\
 /etc/hosts.equiv file contains entries" >> log_msg 2>&1
			ice_status=2
		else
			# Take backup of the file
			cp /etc/hosts.equiv ${TMP%/*}/rmetchostsequiv_hosts.equiv

			# Removes the entries from the file
			$ECHOPREFIX awk '$0 ~ /^[\t ]*#/ {print $0}' /etc/hosts.equiv > $TMP$PID 
			$ECHOPREFIX mv $TMP$PID /etc/hosts.equiv
		fi
	fi
	if [ "$STATUS_ARG" == "true" ] && \
		[ -e ${TMP%/*}/rmetchostsequiv_hosts.equiv ]
	then
		if [ ! -n "$entries" ]
		then
			if [[ cflag -eq 1 ]];
			then
				print "\
 /etc/hosts.equiv file may be missing some entries" >> log_msg 2>&1
				ice_status=2
			else
				$ECHOPREFIX mv ${TMP%/*}/rmetchostsequiv_hosts.equiv \
					/etc/hosts.equiv
			fi
		else
			$ECHOPREFIX mv ${TMP%/*}/rmetchostsequiv_hosts.equiv /etc/hosts.equiv
		fi	 
	fi	
fi
Script_Output
exit 0

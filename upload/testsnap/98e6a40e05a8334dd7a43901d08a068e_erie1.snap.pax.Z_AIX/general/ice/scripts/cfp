# IBM_PROLOG_BEGIN_TAG         
# This is an automatically generated prolog.  
#                            
# $Source: aix71B bos/usr/lib/security/ice/scripts/cfp.sh 1$                         
#                                                           
# COPYRIGHT International Business Machines Corp. 2010,2010              
#                                                                      
# Pvalue: p2 
#Licensed Materials - Property of IBM
#
#Restricted Materials of IBM
#
#US Government Users Restricted Rights - Use, duplication or
#disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Origin: 27
#
# sccsid: $Header: @(#) AIX71B_area/1 bos/usr/lib/security/ice/scripts/cfp.sh, libice, aix71B, 1026A_71B 2010-06-11T20:56:56-05:00$
#
# IBM_PROLOG_END_TAG
#!/usr/bin/ksh

#	Description:
#		Appx. 60 GEN Items covered
#		This script changes file permissions for DoD Compliance
#		This script should be run with superuser privileges.

INSTALLDIR=/etc/security/ice/scripts
. $INSTALLDIR/iceInit

PREREQ_LIST="bos.rte.security,bos.rte.date,bos.rte.ILS,perl.rte"
checkPrereq

TMPDIR=/etc/security/ice/tmp
GENSPERMS=$TMPDIR/gensperms
CFPERROR=$TMPDIR/CFPERROR
DEFAULT=$TMPDIR/defaults
DODPERMS=$TMPDIR/dodperms
SYSCK=/etc/security/sysck.cfg
findpermfiles=$INSTALLDIR/findpermfiles
update_fpm=$INSTALLDIR/update_fpm
update_tcb=$INSTALLDIR/update_tcb
update_te=$INSTALLDIR/update_te
FindLs=$INSTALLDIR/FindLs

if [ "$STATUS_ARG" = "true" ] ; then
	#####################################
	## Generate listing of wrong perms ##
	#####################################
	. $findpermfiles
	if [[ cflag -eq 1 ]] ; then
		if [ -s $GENSPERMS ] ; then
			print "cfp.sh:\
 inadequate permissions:\n\
current \texpected \tfile" >> log_msg 2>&1
			cat $GENSPERMS | awk '{ print $3 "\t   " $2 "\t" $11 }' >> log_msg 2>&1

			ice_status=2
			if [ `egrep -cv "NA" $GENSPERMS` -eq 0 ] ; then	
				cur_val=1
			fi
		else
			cur_val=1
		fi
	else
                cat $GENSPERMS | awk '{ print $2 " " $11 }' | egrep -v "NA" > $DODPERMS
		########################################
		##CAN'T ENFORCE TWICE, ELSE CAN'T UNDO##
		########################################
		if [ -f $DEFAULT ] ; then
			rm $DEFAULT
		fi
                touch $DEFAULT
                files=`cat $GENSPERMS | awk '{ print $11 }'`
                for file in $files
                do
			if [ `grep -c "$file" $DEFAULT` -eq 0 ] ; then
				perms=`perl -e 'printf "%o\n",(stat shift)[2] & 07777' $file`
				echo "$perms $file" >> $DEFAULT
			fi
                done

                FPMFILE=$DODPERMS
		##############################
		##RUN FPM & UPDATE TCB & TE ##
		##############################
		. $update_fpm
		. $update_te
	fi
else
	if [[ cflag -eq 1 ]] ; then
		if [ -s $DEFAULT ] ; then
			list=`cat $DEFAULT | sed "s/ /:/g"`
			for i in $list
			do
				file=`echo $i | awk -F ':' '{ print $2 }'`
				defmod=`echo $i | awk -F ':' '{ print $1 }'`
                               	curperms=`perl -e 'printf "%o\n",(stat shift)[2] & 07777' $file`
				if [ "$curperms" != "$defmod" ] && [ "$curperms" != "0" ] ; then
					out="$out\n$curperms\t  $defmod\t$file"
#					print "cfp.sh:\
# $curperms \t $defmod \t $file" >> log_msg 2>&1
					ice_status=2
				fi
			done	
		fi
	else
		FPMFILE=$DEFAULT

		##############################
		##RUN FPM & UPDATE TCB & TE ##
		##############################
		. $update_fpm
		. $update_te
	fi
fi  
if [[ cflag -eq 1 ]] && [ "$STATUS_ARG" = "false" ] && [ $ice_status -eq 2 ] ; then
	cur_val=1
	echo "cfp.sh:\
 inadequate permissions:\n\
curr\texpected\tfile$out" >> log_msg 2>&1
fi

Script_Output
exit 0


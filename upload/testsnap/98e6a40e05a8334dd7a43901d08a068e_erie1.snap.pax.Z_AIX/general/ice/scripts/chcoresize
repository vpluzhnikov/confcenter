#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG         
# This is an automatically generated prolog.  
#                            
# $Source: aix710 bos/usr/lib/security/ice/scripts/chcoresize.sh 1$                         
#                                                           
# COPYRIGHT International Business Machines Corp. 2010,2010              
#                                                                      
# Pvalue: p2 
#Licensed Materials - Property of IBM
#
#Restricted Materials of IBM
#
#US Government Users Restricted Rights - Use, duplication or
#disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Origin: 27
#
# sccsid: $Header: @(#) AIX710_area/1 bos/usr/lib/security/ice/scripts/chcoresize.sh, libice, aix710, 1010A_710 2010-03-02T17:22:34-06:00$
#
# IBM_PROLOG_END_TAG
#     COMPONENT_NAME:  (ICE)  chcoresize.sh 
#     FUNCTIONS:   None
#     ORIGINS:     27
#
#     Syntax:
#           chcoresize -{c|e|p}[v] Attr Value
#
#     Parameters:
#           -c          -  Check mode
#           -e          -  Enforce mode
#           -p          -  Preview mode
#           -v          -  verbose mode
#	    Attr        -  'Attr' is any attribute defined in the 'chsec' command
#	    value	-  Value of Attr 
#
#     Output:
#           0           -  success
#           1           -  check/enforce failure
#
#     Description:
#	    This script sets the 'Attr' attribute of the 
#	    root stanza to the value specified in 'value'. This script
#	    should be run with superuser privileges.
#  

export PATH=/usr/bin:/usr/sbin:$PATH
exec 2>&1

###
#Print Usage
###
Usage() {
	ice_status=1
        print "usage: \n
   chcoresize -{c|e|p}[v] Attr Value" >> log_msg 2>&1
}

###
#Output from Script to the Native Library
###
Script_Output() {
        print -n "$cur_val%$ice_status%"
        cat log_msg
        print
}


###
#Process arguments
###

#Check mode
cflag=0
#Enforce mode
eflag=0
#Preview mode
pflag=0
#Verbose mode
vflag=0

###
#Initialize the Script Output variables
###
cur_val=
ice_status=0
print -n > log_msg 2>&1


while getopts :cevp OPT
do
        case $OPT in
                c)      cflag=1;;
                e)      eflag=1;;
                v)      vflag=1;;
                p)      pflag=1;;
                ?|:)    Usage
			Script_Output
                        exit 1;;
        esac
done
shift $(($OPTIND -1))

#Enable Verbose
if [[ vflag -eq 1 ]];
then
        set -x
fi

#Need 2 arguments
if [[ $# -ne 2 ]];
then
        Usage
	Script_Output
        exit 1
fi

FILE_ARG=/etc/security/limits
Attr=$1
value=$2


# -c, -e and -p mutually exclusive
((chkflg=cflag+eflag+pflag))
if [[ chkflg -ne 1 ]];
then
        Usage
	Script_Output
        exit 1
fi


PREREQ=/etc/security/ice/scripts/chkprereq
PREREQ_LIST="bos.rte.security,bos.rte.date,bos.rte.commands,bos.rte.ILS,bos.rte.shell"

#checking prereq
$ECHOPREFIX $PREREQ $PREREQ_LIST

if [ $? -ne 0 ]
then
        print "prereq missing... " >> log_msg 2>&1
	print "Prereqs needed: " $PREREQ_LIST >> log_msg 2>&1
	ice_status=1
        Script_Output
	exit 0
fi


# Preview mode set-up
if [[ pflag -eq 1 ]];
then
        ECHOPREFIX="echo"
else
        ECHOPREFIX=""
fi

# Determine the current value of 'Attr' in default stanza
res=`lssec -f $FILE_ARG -s default -a $Attr`
	
if [ $? -ne 0 ]
then
	print "chcoresize: The arguments to\
 the script are incorrect" >> log_msg 2>&1
	ice_status=1
	Script_Output
	exit 0
fi
	
defvalue=`echo $res | awk -F "=" '{print $2}'`
	
# Determine the current value of 'Attr' in root stanza
curvalue=`lssec -f $FILE_ARG -s root -a $Attr | awk -F "=" '{print $2}'`


#checking
if [[ cflag -eq 1 ]];
then
	cur_val=$curvalue
	if [ "$value" != "$curvalue" ]
	then
		print "chcoresize: User attribute $Attr in stanza root, should have value $value, but its current value is $curvalue" >> log_msg 2>&1
		ice_status=2
		Script_Output
	else
		ice_status=0
		Script_Output
	fi

	exit 0
fi

###
#Preview/Enforcing
###

# If new value $value and current value $curvalue of $Attr is not same
# then set $Attr to $value.
if [ "$value" != "$curvalue" ]
then

	$ECHOPREFIX chsec -f $FILE_ARG -s root -a $Attr=$value 

	if [ $? -ne 0 ] 
	then
		print "chcoresize: The arguments to the script are incorrect" >> log_msg 2>&1 
		ice_status=1
		
	fi
fi
		

Script_Output
exit 0

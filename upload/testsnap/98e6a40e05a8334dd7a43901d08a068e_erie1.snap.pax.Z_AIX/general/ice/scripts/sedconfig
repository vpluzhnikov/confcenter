#/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG         
# This is an automatically generated prolog.  
#                            
# $Source: aix710 bos/usr/lib/security/ice/scripts/sedconfig.sh 1$                         
#                                                           
# COPYRIGHT International Business Machines Corp. 2010,2010              
#                                                                      
# Pvalue: p2 
#Licensed Materials - Property of IBM
#
#Restricted Materials of IBM
#
#US Government Users Restricted Rights - Use, duplication or
#disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Origin: 27
#
# sccsid: $Header: @(#) AIX710_area/1 bos/usr/lib/security/ice/scripts/sedconfig.sh, libice, aix710, 1010A_710 2010-03-02T17:20:47-06:00$
#
# IBM_PROLOG_END_TAG
#       COMPONENT_NAME: (ICE) sedconfig.sh
#       FUNCTIONS:      None
#       ORIGINS:        27
#
#       Syntax:
#               sedconfig -{c|e|p}[v] rulename toggle
#       Parameters:
#               -c      - Check mode
#               -e      - Enforce mode
#               -p      - Preview mode
#               -v      - verbose mode
#		lname	- rule_name
#		toggle	- Boolean
#			  false => Disable
#			  true  => Enable
#
#       OUTPUT:
#               0       - success
#               1       - check/enforce failure
#
#       Description:
#		Based on the toggle, this script enables/checks the SED
#		feature for sidfiles. If the toggle is false it sets it
#		to the AIX default of select.

export PATH=/usr/bin:/usr/sbin:$PATH
exec 2>&1


###
#Print Usage
###
Usage() {
	ice_status=1
        print "usage: \n
   sedconfig -{c|e|p}[v] rulename toggle\n" >> log_msg 2>&1
}

###
#Output from Script to the Native Library
###
Script_Output() {
        print -n "$cur_val%$ice_status%"
        cat log_msg
        print
}

###
#Process arguments
###

#Check mode
cflag=0
#Enforce mode
eflag=0
#Preview mode
pflag=0
#Verbose mode
vflag=0

###
#Initialize the Script Output variables
###
cur_val=0
ice_status=0
print -n > log_msg 2>&1

while getopts :cevp OPT
do
        case $OPT in
                c)      cflag=1;;
                e)      eflag=1;;
                v)      vflag=1;;
                p)      pflag=1;;
                ?|:)    Usage
			Script_Output
                        exit 1;;
        esac
done
shift $(($OPTIND -1))

#Enable Verbose
if [[ vflag -eq 1 ]];
then
        set -x
fi

#Need 2 arguments
if [[ $# -lt 2 ]];
then
        Usage
	Script_Output
        exit 1
fi

# -c, -e and -p mutually exclusive
((chkflg=cflag+eflag+pflag))
if [[ chkflg -ne 1 ]];
then
        Usage
	Script_Output
        exit 1
fi

RULE_NAME=$1
STATUS_ARG=$2
#Toggle argument must be true or false
if ( [ "$STATUS_ARG" != "true" ] && [ "$STATUS_ARG" != "false" ] )
then
        print "Toggle must be true or false" >> log_msg 2>&1
        Usage
        Script_Output
        exit 1
fi

# Preview mode set-up
if [[ pflag -eq 1 ]];
then
        ECHOPREFIX="echo"
else
        ECHOPREFIX=""
fi

# Determine whether the machine is 64 bit or not.
KR=`/usr/sbin/bootinfo -K`

if  [ $KR -ne 64 ]
then
	print "This rule only applies to 64 bit machines" >> log_msg 2>&1
	ice_status=1      # Machine does not support sedmgr
        Script_Output
        exit 0
fi

PREREQ=/etc/security/ice/scripts/chkprereq
PREREQ_LIST="bos.rte.date,bos.rte.commands,bos.rte.shell,bos.rte.ILS"

$ECHOPREFIX $PREREQ $PREREQ_LIST

if [ $? -ne 0 ]
then
        print "prereq missing... " >> log_msg 2>&1
	print "Prereqs needed: " $PREREQ_LIST >> log_msg 2>&1
	ice_status=1
	Script_Output
        exit 0
fi


sedmode=`sedmgr|head -1|awk -F ":" '{print $2}'|awk -F "+" '{print $1}'`

#checking
if [[ cflag -eq 1 ]];
then
	# Default case
	if [ "$STATUS_ARG" = "false" ] 	
	then
		if [ "$sedmode" != " select" ]
		then
			print "Stack Execution Disable feature is not set to default state" >> log_msg 2>&1 
			ice_status=2
			cur_val=1
			Script_Output
		else
			ice_status=0
			cur_val=0
			Script_Output
		fi
	# Enable SED
	else
		if [ "$sedmode" != " setidfiles" ]
		then
			print "Stack Execution Disable feature is not enabled for setidfiles" >> log_msg 2>&1
			ice_status=2
			cur_val=0
			Script_Output
		else
			ice_status=0
			cur_val=1
			Script_Output
		fi
	fi 

	exit 0
fi

###
#Preview/Enforcing
###

if [ "$STATUS_ARG" = "true" ]
then

	# enable SED feature for setidfiles
	$ECHOPREFIX sedmgr -m setidfiles -o off >> log_msg 2>&1

	if [ $? -ne 0 ]
	then
		print "sedmgr command failed to enable SED to setidfiles "  >> log_msg 2>&1
		ice_status=1
		Script_Output
	else
		ice_status=0
		cur_val=1
		Script_Output
	fi
else

	# Set SED feature for select (default state)
	$ECHOPREFIX sedmgr -m select -o off >> log_msg 2>&1

	if [ $? -ne 0 ]
	then
		print "sedmgr command failed to set SED default state"  >> log_msg 2>&1
		ice_status=1
		Script_Output
	else
		cur_val=0
		ice_status=0
		Script_Output
	fi
fi

exit 0

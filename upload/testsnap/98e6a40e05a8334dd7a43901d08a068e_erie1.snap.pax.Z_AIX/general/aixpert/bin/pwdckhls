#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos61B src/bos/usr/lib/security/aixpert/scripts/pwdckhls.sh 1.2 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2006,2007 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)08	1.2  src/bos/usr/lib/security/aixpert/scripts/pwdckhls.sh, aixpert, bos61B, b2007_38A8 8/16/07 03:39:55
# IBM_PROLOG_END_TAG 
#	COMPONENT_NAME		: (AIXPERT) pwdckhls.sh
#	FUNCTIONS		: None
#	ORIGINS			: 27
#
#	Command Line Arguments	: None
#
#	OUTPUT			: None
#
#	Description		: This script reports and corrects incorrect
#				password definitions. Also, locks user accounts
#				that have no password set.
#				This script should be run with root privileges.

export PATH=/usr/bin:/usr/sbin:$PATH

# Initialize variables LOG, REPORT, SCPTDIR and UNDOXML
. /etc/security/aixpert/bin/initialize_variables

PASSWDFILE=/etc/security/passwd
USERFILE=/etc/security/user

# Log output and errors to /etc/security/aixpert/log/aixpert.log
exec 1>>$LOG
exec 2>&1

if [ $# -ne 0 ] 
then
        dspmsg -s 19 aixpert.cat 1 "Usage : pwdckhls\n"
        exit 1
fi

# Check whether AIXPERT_CHECK_REPORT environment variable is set or not.
report=`echo $AIXPERT_CHECK_REPORT`
if [ "$report" = "1" ]
then
        pwdck -n ALL
        if [ $? -ne 0 ]
        then
                dspmsg -s 19 aixpert.cat 2 "pwdckhls.sh : pwdck returned errors\n" >>$REPORT
                exit 1
        else
                exit 0
        fi
fi

# echo all the commands and the current time and date to the AIXpert log
set -x
date
echo $0

# Report and correct incorrect password definitions
pwdck -y ALL

for user in `dispuid`
do
	if [ "$user" != "root" ]
	then
		# Get the lastupdate from the file /etc/security/passwd. 
		# This will be NULL if the user has no password set.

		lastupdate=`lssec -f $PASSWDFILE -s $user -a lastupdate|\
awk -F "=" '{print $2}'`

		if [ "$lastupdate" = "" ]
		then		
			# Lock users if the lastupdate is null
			chsec -f $USERFILE -s $user -a account_locked=true
		fi
	fi
done

exit 0

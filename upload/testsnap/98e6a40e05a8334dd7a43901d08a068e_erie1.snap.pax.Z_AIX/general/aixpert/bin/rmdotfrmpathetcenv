#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos61H src/bos/usr/lib/security/aixpert/scripts/rmdotfrmpathetcenv.sh 1.5 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2006,2009 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)10	1.5  src/bos/usr/lib/security/aixpert/scripts/rmdotfrmpathetcenv.sh, aixpert, bos61H, 0904A_61H 1/15/09 08:12:19
# IBM_PROLOG_END_TAG 
#	COMPONENT_NAME		: (AIXPERT) rmdotfrmpathetcenv.sh
#	FUNCTIONS		: None
#	ORIGINS			: 27
#
#	Command Line Arguments	: This script expects two command line arguements.
#				The first argument should be either 'r' or 'a' 
#				representing "remove" or "add" dot to PATH. Second
#				argument should be the rulename.
#				Syntax - rmdotfrmpathetcenv {r|a} [rulename]
#
#	OUTPUT			: None
#	Description		: This script removes/adds dot to PATH environment
#				variable in file /etc/environmenet.
#				This script also acts as undo script.
#				This script should be run with superuser privileges.

export PATH=/usr/bin:/usr/sbin:$PATH

# Initialize variables AIXPERT_FIFO, LOG, REPORT and UNDOXML
. /etc/security/aixpert/bin/initialize_variables

ETCENV=/etc/environment
TMP=/etc/security/aixpert/tmp/rmdotfrmpathetcenv
PID=$$

# Log output and errors to /etc/security/aixpert/log/aixpert.log
exec 1>>$LOG
exec 2>&1

if [ $# -lt 1 ] || [ $# -gt 2 ] || ( [ $1 != "r" ] && [ $1 != "a" ] )
then
	dspmsg -s 21 aixpert.cat 1 "Usage :\
 rmdotfrmpathetcenv {r|a} [rulename]\n"
        exit 1
fi

# echo all the commands and the current time and date to the AIXpert log
set -x
date
echo $0

# A value of 0 indicates that Undo rule need not be created. This variable
# will be set later in the script if there is anything to be undone
undo=0

# Check whether dot exists in the PATH env variable in file /etc/enviroment
# PATH env variable can be of type
# PATH=".:/home/userx:/home/me/..:/usr/sbin/:.:/usr/bin:."
# PATH= .:/home/guest:/usr/bin
awk -F ";" '{
	for(i=1;i<=NF;i++) {
		if(match($i,"^[\t ]*PATH[\t ]*=") != 0){
			if( (match($i,"[\t ]*PATH[\t ]*=\\.:") != 0)\
 || (match($i,"[\t ]*PATH[\t ]*=\"\\.:") != 0) || (match($i,":\\.$") != 0) ||\
 (match($i,":\\.\"$") != 0) || (match($i,":\\.:") != 0) )
				exit 1
		}
	}
}' $ETCENV

dotexists=$?

if [ $# -eq 2 ] && [ $1 = "r" ]
then
	# Check whether AIXPERT_CHECK_REPORT environment variable is set
	report=`echo $AIXPERT_CHECK_REPORT`

	if [ $dotexists -eq 1 ]
	then
		# Dynamic Security Check
		if [ "$report" = "1" ]
		then
			dspmsg -s 21 aixpert.cat 2 "rmdotfrmpathetcenv.sh:\
 A dot exists in PATH environment variable in file /etc/environment\n" >>$REPORT
			dspmsg -s 21 aixpert.cat 2 "rmdotfrmpathetcenv.sh:\
 A dot exists in PATH environment variable in file /etc/environment\n" >>$AIXPERT_FIFO
			exit 1
		else
			undo=1
			# Remove dot from PATH environment variable.
			awk  '{
				if(match($0,"^[\t ]*PATH[\t ]*=") != 0){
					gsub("PATH[\t ]*=[\t ]*\\.:","PATH=");
					gsub("PATH[\t ]*=[\t ]*\"\\.:","PATH=");
					gsub(":\\.:",":");
					gsub(":\\.\"$","");
					gsub(":\\.$","");
				print $0;
				}
				else {
					print $0;
				}
			}' $ETCENV >$TMP$PID
			mv $TMP$PID $ETCENV
		fi
	else
		if [ "$report" != "1" ]
		then
			# For undo consistency
			undo=1
		fi
	fi
else
	if [ $dotexists -eq 0 ]
	then
		# Add dot to PATH environment variable.
		awk -F ";" '{
			for(i=1;i<=NF;i++){
				if(match($i,"^[\t ]*PATH[\t ]*=") != 0){
					print $i":.";
				}
				else {
					print $i;
				}
			}
		}' $ETCENV >$TMP$PID
		mv $TMP$PID $ETCENV
	fi
fi

if [ $undo -eq 1 ]
then
	# Check whether the $UNDOXML file is empty
	empty=`grep "^<AIXPertUndo>" $UNDOXML`

	# If empty, add the start and end tags to $UNDOXML
	if [ "$empty" = "" ]
	then
		echo "\n<AIXPertUndo>\n</AIXPertUndo>" >> $UNDOXML
	fi

	# Get the rulename and put it in undo rule
	name=`echo $AIXPERT_NAME`
	# Get the rule description & pass it to undo rule
	desc=`echo $AIXPERT_DESC`

	# Add an undo XML rule to the file $UNDOXML	
	awk -v rulehalf1="\t<AIXPertEntry name=\"$name\">\n\
\t\t<AIXPertRuleType type=\"Undo\"/>\n\
\t\t<AIXPertDescription>Undo action for \"$desc\"</AIXPertDescription>\n\
\t\t<AIXPertPrereqList/>\n"\
 -v rulehalf2="\t\t<AIXPertCommand>/etc/security/aixpert/bin/rmdotfrmpathetcenv\
</AIXPertCommand>\n\t\t<AIXPertArgs>a</AIXPertArgs>\n\
\t\t<AIXPertGroup>Miscellaneous Rules</AIXPertGroup>\n\
\t</AIXPertEntry>" '{if(match($0,"^[\t ]*</AIXPertUndo>")==0) print $0;\
 else print rulehalf1 rulehalf2 "\n" $0}' $UNDOXML >$TMP$PID
	mv $TMP$PID $UNDOXML
fi

exit 0

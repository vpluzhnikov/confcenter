#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos610 src/bos/usr/lib/security/aixpert/scripts/firewsetup.sh 1.7 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2007 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)00	1.7  src/bos/usr/lib/security/aixpert/scripts/firewsetup.sh, aixpert, bos610 5/30/07 11:45:15
# IBM_PROLOG_END_TAG 
#       COMPONENT_NAME          : (AIXPERT) firewsetup.sh
#       FUNCTIONS               : None
#       ORIGINS                 : 27
#
#       Command Line Arguments  : None
#
#       OUTPUT                  : None
#
#       Description             : This script sets up IPSec and adds filters to shun
#				  few ports for 5 minutes to avoid port scan attacks

export PATH=/usr/bin:/usr/sbin:$PATH

# Initialize variables AIXPERT_FIFO, LOG, REPORT, SCPTDIR and UNDOXML
. /etc/security/aixpert/bin/initialize_variables

# Log output and errors to /etc/security/aixpert/log/aixpert.log
exec 1>>$LOG
exec 2>&1

if [ $# -ne 0 ]
then
	dspmsg -s 34 aixpert.cat 1 "Usage: firwesetup\n"
	exit 1
fi

set -x
date
echo $0

IPSECON=/etc/security/aixpert/bin/prereqnosyn
SHUNPORTS=/etc/security/aixpert/bin/ipsecshunports
TMP=/etc/security/aixpert/tmp/firewsetup
TMP1=/etc/security/aixpert/tmp/undoxmlfwsu
PID=$$

# Restore back the undo.xml file in core dir
restore_undo(){
mv $TMP1$PID.xml $UNDOXML
}

ipv4=`lsdev -Cc ipsec|grep ipsec_v4|awk '{print $2}'`
ipv6=`lsdev -Cc ipsec|grep ipsec_v6|awk '{print $2}'`

report=`echo $AIXPERT_CHECK_REPORT`
if [ "$report" != "1" ]
then
	# Take backup of undo.xml file
	mv $UNDOXML $TMP1$PID.xml

	# enable IPSec
	$IPSECON
	rc=$?
	if [ $rc -ne 0 ]
	then
		dspmsg -s 34 aixpert.cat 2 "firewsetup.sh: Failed to turn on IPSec\n"
		restore_undo
		exit 1
	fi
	ipv4c=`lsdev -Cc ipsec|grep ipsec_v4|awk '{print $2}'`
	ipv6c=`lsdev -Cc ipsec|grep ipsec_v6|awk '{print $2}'`

	echo "#!/usr/bin/ksh\nexport PATH=/usr/bin:/usr/sbin:\$PATH\n"\
 >$SCPTDIR/Undofirewsetup$PID
	echo "exec 1>>$LOG\nexec 2>&1\nset -x\ndate\necho" '$0'\
 >>$SCPTDIR/Undofirewsetup$PID

	if [ "$ipv4" != "$ipv4c" ]
	then
		echo "/usr/sbin/rmdev -l ipsec_v4" >>$TMPDIR/Undofirewsetup$PID
	fi
	if [ "$ipv6" != "$ipv6c" ]
	then
		echo "/usr/sbin/rmdev -l ipsec_v6" >>$TMPDIR/Undofirewsetup$PID
	fi

	# Activate IPSec filters to shun ununsed ports for 5 minutes
	$SHUNPORTS scbps_ipsecshunports
	rc2=$?

	# Currently UNDOXML file will have the undo rule for IPSec shun hosts rule.
	# store the temporaty undo file generated in $SAVE/undo.fwsu.xml
	mv $UNDOXML $SAVE/undo.fwsu.xml

	# replace the original undo.xml in place
	restore_undo

	# the below awk script reads the undo rules frm tmp undo.xml to get the
	# AIXPertCommand and AIXPertArgs together

	awk -F '>' 'BEGIN {x=0}\
	{\
	if(match($1,"<AIXPertCommand")!=0){\
		x=1;\
		gsub("</AIXPertCommand", "", $2);\
		cmd=$2;\
	}\
	else{\
		if(x)\
		{\
			if(match($1,"<AIXPertArgs")!=0){\
				if(NF<2){\
					print $cmd;\
				}\
				else {\
					gsub("</AIXPertArgs","",$2);\
					print cmd " " $2;\
				}\
			}\
			else {\
				print $cmd;\
			}\
			x=0;\
		}\
	}\
	}' $SAVE/undo.fwsu.xml >>$SCPTDIR/Undofirewsetup$PID

	cat $TMPDIR/Undofirewsetup$PID >>$SCPTDIR/Undofirewsetup$PID
	rm $TMPDIR/Undofirewsetup$PID

	# now $SCPTDIR/Undofirewsetup$PID file will have the actions to undo
	# 2) turn off IPSec shun port filters, if any were added
	# 1) disable IPSec

	# Grant execute perms on $SCPTDIR/Undofirewsetup$PID
	chmod ug+x $SCPTDIR/Undofirewsetup$PID
	# remove the temporary undo xml file
	rm $SAVE/undo.fwsu.xml

	# check whether ipsecshuports succeeded or not
	if [ $rc2 -ne 0 ]
	then
		dspmsg -s 34 aixpert.cat 3 "firewsetup.sh: Failed to add IPSec filters\
 to shun unused ports\n"
		# Undo the security settings applied
		. $SCPTDIR/Undofirewsetup$PID
		rm $SCPTDIR/Undofirewsetup$PID
		exit 1
	fi

	# write the undo rule for undoing firewall setup
	# this undo rule will be appended to original undo.xml 
	# Check if UNDOXML file has <AIXPertUndo> tag or not
	empty=`grep "^<AIXPertUndo>" $UNDOXML`
	if [ "$empty" = "" ]
	then
		echo "\n<AIXPertUndo>\n</AIXPertUndo>" >> $UNDOXML
	fi

	# Get the rulename and put it in undo rule
	name=`echo $AIXPERT_NAME`
	# Get the rule description & pass it to undo rule
	desc=`echo $AIXPERT_DESC`

	# Add an undo XML rule to the file $UNDOXML
	awk -v rulepart1="\t<AIXPertEntry name=\"$name\">\n\
\t\t<AIXPertRuleType type=\"Undo\"/>\n\
\t\t<AIXPertDescription>Undo action for \"$desc\"</AIXPertDescription>\n\
\t\t<AIXPertPrereqList/>\n"\
 -v rulepart2="\t\t<AIXPertCommand>$SCPTDIR/Undofirewsetup$PID\
</AIXPertCommand>\n\t\t<AIXPertArgs/>\n"\
 -v rulepart3="\t\t<AIXPertGroup>SOX-COBIT Best Practices Security</AIXPertGroup>\n\
\t</AIXPertEntry>" '{if(match($0,"^[\t ]*</AIXPertUndo>")==0) print $0;\
 else print rulepart1 rulepart2 rulepart3 "\n" $0}' $UNDOXML >$TMP$PID
	mv $TMP$PID $UNDOXML
else
# Check report action
	if [ "$ipv4" != "Available" ] && [ "$ipv6" != "Available" ]
	then
		dspmsg -s 34 aixpert.cat 2 "firewsetup.sh: Failed to turn on IPSec\n" >>$REPORT
		dspmsg -s 34 aixpert.cat 2 "firewsetup.sh: Failed to turn on IPSec\n" >>$AIXPERT_FIFO
		exit 1
	elif [ "$ipv4" = "Available" ]
	then
		spv4=`lsfilt -v4 -O -a|awk -F '|' '{print $2}'|egrep "shun port|shunPort"`
		if [ $? -ne 0 ] && [ -z "$spv4" ]
		then
			dspmsg -s 34 aixpert.cat 4 "firewsetup.sh: IPSec v4 shun port rules\
 are not turned on\n" >>$REPORT
			dspmsg -s 34 aixpert.cat 4 "firewsetup.sh: IPSec v4 shun port rules\
 are not turned on\n" >>$AIXPERT_FIFO
			exit 1
		fi
	else
		spv6=`lsfilt -v6 -O -a|awk -F '|' '{print $2}'|egrep "shun port|shunPort"`
		if [ $? -ne 0 ] && [ -z "$spv6" ]
		then
			dspmsg -s 34 aixpert.cat 5 "firewsetup.sh: IPSec v6 shun port rules\
 are not turned on\n" >>$REPORT
			dspmsg -s 34 aixpert.cat 5 "firewsetup.sh: IPSec v6 shun port rules\
 are not turned on\n" >>$AIXPERT_FIFO
			exit 1
		fi
	fi
fi

exit 0


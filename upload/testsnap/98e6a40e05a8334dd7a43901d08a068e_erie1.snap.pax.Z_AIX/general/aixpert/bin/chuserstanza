#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos610 src/bos/usr/lib/security/aixpert/scripts/chuserstanza.sh 1.3 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2006,2007 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)81	1.3  src/bos/usr/lib/security/aixpert/scripts/chuserstanza.sh, aixpert, bos610 2/3/07 13:17:40
# IBM_PROLOG_END_TAG 
#	COMPONENT_NAME		: (AIXPERT) chuserstanza.sh
#	FUNCTIONS		: None
#	ORIGINS			: 27
#
#	Command Line Arguments	: The script expects 4 command line arguments.
#				The first argument should be the security
#				configuration stanza file. The second argument
#				should be of the form 'Attr=value" where 'Attr'
#				is any attribute that is defined in the 'chsec'
#				command. The third argument should be the
#				stanza where the attribute "Attr" has to be
#				set. The stanza should be specific to the user.
#				Otherwise, the script will not work correctly.
#				The fourth argument is optional and should be
#				the rulename.
#	Syntax			: chuserstanza file Attr=value stanza [rulename]
#
#	OUTPUT			: None
#
#	Description		: This script sets the 'Attr' attribute of the
#				$3 stanza to the value specified by the 'val'
#				in file $1. The script generates an Undo XML
#				rule when the fourth argument is specified.
#				This script should be run with superuser
#				privileges.

export PATH=/usr/bin:/usr/sbin:$PATH

# Initialize variables AIXPERT_FIFO, LOG, REPORT and UNDOXML
. /etc/security/aixpert/bin/initialize_variables

TMP=/etc/security/aixpert/tmp/chuserstanza
PID=$$

# Log output and errors to /etc/security/aixpert/log/aixpert.log

exec 1>>$LOG
exec 2>&1

if ( [ $# -lt 3 ] || [ $# -gt 4 ] )
then
	dspmsg -s 3 aixpert.cat 1 "Usage :\
 chuserstanza file Attr=value stanza [rulename]\n"
	exit 1
fi

# echo all the commands and the current time and date to the AIXpert log
set -x
date
echo $0

# This script generates Undo rule if the number of arguments is 4,
# otherwise it works as undo script.
if [ $# -eq 4 ]
then
	#Determine the attribute specified in $2
	Attr=`echo $2 | awk -F "=" '{print $1; if(NF!=2) exit 1}'`

	if [ $? -ne 0 ] 
	then
		dspmsg -s 3 aixpert.cat 1  "Usage :\
 chuserstanza file Attr=value stanza [rulename]\n"
		exit 1
	fi
	
	# Determine the value of attribute $Attr in $2
	value=` echo $2 | awk -F "=" '{print $2}'`
	
	# Determine the current value of 'Attr' in default stanza
	res=`lssec -f $1 -s default -a $Attr`
	
	if [ $? -ne 0 ]
	then
		dspmsg -s 3 aixpert.cat 2 "chuserstanza.sh: The arguments to\
 the script are incorrect\n"
		exit 1
	fi
	
	defvalue=`echo $res | awk -F "=" '{print $2}'`
	
	# Determine the current value of 'Attr' in stanza $3
	curvalue=`lssec -f $1 -s $3 -a $Attr | awk -F "=" '{print $2}'`
	
	# If the $defvalue and $curvalue are same and $value is different
	# from $curvalue, remove the Attr from stanza $3
	if [ "$defvalue" = "$curvalue" ] && [ "$curvalue" != "$value" ]
	then
		curvalue=""
	fi

	# Check whether AIXPERT_CHECK_REPORT environment variable is set
	report=`echo $AIXPERT_CHECK_REPORT`

	# If new value $value and current value $curvalue of $Attr is not same
	# then set $Attr to $value and generate undo rule
	if [ "$value" != "$curvalue" ]
	then
		if [ "$report" = "1" ]
		then
			dspmsg -s 3 aixpert.cat 3 "chuserstanza.sh: User\
 attribute %s in stanza %s, should have value %s, but its value is %s now\n"\
 $Attr $3 $value $curvalue "NULL" >>$REPORT
			dspmsg -s 3 aixpert.cat 3 "chuserstanza.sh: User\
 attribute %s in stanza %s, should have value %s, but its value is %s now\n"\
 $Attr $3 $value $curvalue "NULL" >>$AIXPERT_FIFO
			exit 1
		fi

		chsec -f $1 -s $3 -a $2
		if [ $? -ne 0 ] 
		then
			dspmsg -s 3 aixpert.cat 2 "chuserstanza.sh: The arguments to\
 the script are incorrect\n"
			exit 1
		fi
	else
		# for undo consistency
		if [ "$report" = "1" ]
		then
			exit 0
		fi
	fi
		
	# Check if UNDOXML file has <AIXPertUndo> tag or not
	empty=`grep "^<AIXPertUndo>" $UNDOXML`
	if [ "$empty" = "" ]
	then
		echo "\n<AIXPertUndo>\n</AIXPertUndo>" >> $UNDOXML
	fi

	# Get the rulename and put it in undo rule
	name=`echo $AIXPERT_NAME`
	# Get the rule description & pass it to undo rule
	desc=`echo $AIXPERT_DESC`

	#Add an undo XML rule to the file $UNDOXML
	awk -v rulehalf1="\t<AIXPertEntry name=\"$name\">\n\
\t\t<AIXPertRuleType type=\"Undo\"/>\n\
\t\t<AIXPertDescription>Undo action for \"$desc\"</AIXPertDescription>\n\
\t\t<AIXPertPrereqList/>\n"\
 -v rulehalf2="\t\t<AIXPertCommand>/etc/security/aixpert/bin/chuserstanza\
</AIXPertCommand>\n\
\t\t<AIXPertArgs>$1 $Attr=$curvalue $3</AIXPertArgs>\n\
\t\t<AIXPertGroup>Login policy recommendations</AIXPertGroup>\n\
\t</AIXPertEntry>" '{if(match($0,"^[\t ]*</AIXPertUndo>")==0) print $0;
 else print rulehalf1 rulehalf2 "\n" $0}' $UNDOXML >$TMP$PID
	mv $TMP$PID $UNDOXML
else
	chsec -f $1 -s $3 -a $2
	if [ $? -ne 0 ]
	then
		dspmsg -s 3 aixpert.cat 2 "chuserstanza.sh: The arguments to\
 the script are incorrect\n"
		exit 1
	fi
fi

exit 0

#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos610 src/bos/usr/lib/security/aixpert/scripts/prereqrl.sh 1.2 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2006 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)05	1.2  src/bos/usr/lib/security/aixpert/scripts/prereqrl.sh, aixpert, bos610 12/26/06 06:40:34
# IBM_PROLOG_END_TAG 
#	COMPONENT_NAME		: (AIXPERT) prereqrl.sh
#	FUNCTIONS		: None
#	ORIGINS			: 27
#
#	Command Line Arguments	: None
#
#	OUTPUT			: None
#
#	Description		: Checks whether any non root user exists
#				  with login=true, account_locked=false and
#				  shell=some_valid_shell, i.e., not /bin/false.

export PATH=/usr/bin:/usr/sbin:$PATH

# Determine any other normal user with login=true, account_locked=false
# and shell=some_valid_shell, exists.
userlist=`lsuser -a login account_locked shell ALL|egrep -v "root|guest" |\
grep ".*login=true account_locked=false shell=.*sh$"|awk '{print $1}'`

if [ "$userlist" != "" ]
then
	uexists=0
	# For all the users with login=true, account_locked=false
	# and shell=some_valid_shell, check whether that account is not
	# locked for any other reason.
	for i in $userlist
	do
		# usrck -lb checks whether the account is locked or not.
		usrck -lb $i 2>/dev/null 1>&2
		rc=$?
		# If the user is locked for any reason, usrck returns 114
		if [ $rc -eq 114 ]
		then
			# This user is locked for some reason.
			continue;
		elif [ $rc -eq 2 ]
		then
			# user does not exist
			continue;
		else
			# Atleast one user exists, whose account is not locked.
			uexists=1
			break;
		fi
	done
	if [ $uexists -eq 1 ]
	then
		exit 0
	else
		exit 1
	fi
else
	exit 1
fi

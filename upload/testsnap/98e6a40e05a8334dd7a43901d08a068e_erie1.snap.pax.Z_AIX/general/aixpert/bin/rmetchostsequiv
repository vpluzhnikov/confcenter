#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos610 src/bos/usr/lib/security/aixpert/scripts/rmetchostsequiv.sh 1.4 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2006,2007 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)13	1.4  src/bos/usr/lib/security/aixpert/scripts/rmetchostsequiv.sh, aixpert, bos610 3/15/07 06:08:17
# IBM_PROLOG_END_TAG 
#	COMPONENT_NAME		: (AIXPERT) rmetchostsequiv.sh
#	FUNCTIONS		: None
#	ORIGINS			: 27
#
#	Command Line Arguments	: This script expects only one command line
#				argument, i.e,. rulename.
#				Syntax: rmetchostsequiv rulename
#
#	OUTPUT			: None
#
#	Description		: This script removes the entries from
#				/etc/hosts.equiv file. It dynamically generates
#				undo rules and xml rule. This script should be
#				run with superuser privileges.

export PATH=/usr/bin:/usr/sbin:$PATH

# Initialize variables AIXPERT_FIFO, LOG, REPORT, SAVE and UNDOXML
. /etc/security/aixpert/bin/initialize_variables

TMP=/etc/security/aixpert/tmp/rmetchostsequiv
PID=$$

# Log output and errors to /etc/security/aixpert/log/aixpert.log
exec 1>>$LOG
exec 2>&1

if [ $# -ne 1 ]
then
	dspmsg -s 24 aixpert.cat 1 "Usage: rmetchostsequiv rulename\n"
	exit 1
fi

# echo all the commands and the current time and date to the AIXpert log
set -x
date
echo $0

# A value of 0 indicates that Undo rule need not be created. This variable
# will be set later in the script if there is anything to be undone
undo=0

if [ -e /etc/hosts.equiv ]
then
	entries=`awk '$0 !~ /^[\t ]*#/{ print $0}' /etc/hosts.equiv`
	# Check whether AIXPERT_CHECK_REPORT environment variable is set or not.
	report=`echo $AIXPERT_CHECK_REPORT`
	if [ -n "$entries" ]
	then
		if [ "$report" = "1" ]
		then
			dspmsg -s 24 aixpert.cat 2 "rmetchostsequiv.sh:\
 /etc/hosts.equiv file contains entries\n" >>$REPORT
			dspmsg -s 24 aixpert.cat 2 "rmetchostsequiv.sh:\
 /etc/hosts.equiv file contains entries\n" >>$AIXPERT_FIFO
			exit 1
		else
			undo=1
			time=`date +%s`
			# Take backup of the file
			cp /etc/hosts.equiv $SAVE/rmetchostsequiv_hosts.equiv.$time

			# Removes the entries from the file
			awk '$0 ~ /^[\t ]*#/ {print $0}' /etc/hosts.equiv >$TMP$PID
			mv $TMP$PID /etc/hosts.equiv
			echo "mv $SAVE/rmetchostsequiv_hosts.equiv.$time\
 /etc/hosts.equiv" >>$TMP$PID
		fi
	else
		# for undo consistency
		if [ "$report" != "1" ]
		then
			undo=1
			time=`date +%s`
			# Take backup of the file
			cp /etc/hosts.equiv $SAVE/rmetchostsequiv_hosts.equiv.$time
			echo "mv $SAVE/rmetchostsequiv_hosts.equiv.$time\
 /etc/hosts.equiv" >>$TMP$PID
		fi
	fi
fi

# Generate an undo rule
if [ $undo -eq 1 ]
then
	# Create Undo script $SCPTDIR/Undo$1$time
	echo "#!/usr/bin/ksh\nexport PATH=/usr/bin:/usr/sbin:\$PATH\n" >$SCPTDIR/Undo$1$time
	echo "exec 1>>$LOG\nexec 2>&1\nset -x\ndate\necho" '$0' >>$SCPTDIR/Undo$1$time
	cat $TMP$PID >>$SCPTDIR/Undo$1$time
	rm  $TMP$PID
	chmod ug+x $SCPTDIR/Undo$1$time

	# Check if UNDOXML file has <AIXPertUndo> tag or not
	empty=`grep "^<AIXPertUndo>" $UNDOXML`
	if [ "$empty" = "" ]
	then
		echo "\n<AIXPertUndo>\n</AIXPertUndo>" >> $UNDOXML
	fi

	# Get the rulename and put it in undo rule
	name=`echo $AIXPERT_NAME`
	# Get the rule description & pass it to undo rule
	desc=`echo $AIXPERT_DESC`

	# Add an undo XML rule to the file $UNDOXML
	awk -v rulehalf1="\t<AIXPertEntry name=\"$name\">\n\
\t\t<AIXPertRuleType type=\"Undo\"/>\n\
\t\t<AIXPertDescription>Undo action for \"$desc\"</AIXPertDescription>\n\
\t\t<AIXPertPrereqList/>\n"\
 -v rulehalf2="\t\t<AIXPertCommand>$SCPTDIR/Undo$1$time</AIXPertCommand>\n\
\t\t<AIXPertArgs/>\n\t\t<AIXPertGroup>Remove unauthorized cccess</AIXPertGroup>\n\
\t</AIXPertEntry>" '{if(match($0,"^[\t ]*</AIXPertUndo>")==0) print $0;\
 else print rulehalf1 rulehalf2 "\n" $0}' $UNDOXML >>$TMP$PID
	mv $TMP$PID $UNDOXML
fi

exit 0

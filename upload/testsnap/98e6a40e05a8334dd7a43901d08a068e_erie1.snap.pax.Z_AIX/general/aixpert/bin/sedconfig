#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos610 src/bos/usr/lib/security/aixpert/scripts/sedconfig.sh 1.4 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2007 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)27	1.4  src/bos/usr/lib/security/aixpert/scripts/sedconfig.sh, aixpert, bos610 3/30/07 01:32:54
# IBM_PROLOG_END_TAG 
#       COMPONENT_NAME          : (AIXPERT) sedconfig.sh
#       FUNCTIONS               : None
#       ORIGINS                 : 27
#
#       Command Line Arguments  : This scripts enables the SED feature, it takes
#				  only one argument, i.e., rulename
#
#       OUTPUT                  : None
#
#       Description             : This script checks whether SED feature is
#				  enabled or not, enables it if its not already
#				  enabled. 

export PATH=/usr/bin:/usr/sbin:$PATH

# Initialize variables AIXPERT_FIFO, LOG, REPORT, SCPTDIR and UNDOXML
. /etc/security/aixpert/bin/initialize_variables

TEMP=/etc/security/aixpert/tmp/sedcfg
PID=$$

# Log output and errors to /etc/security/aixpert/log/aixpert.log
exec 1>>$LOG
exec 2>&1

if [ $# -ne 1 ]
then
        dspmsg -s 32 aixpert.cat 1 "Usage: sedconfig {rulename}\n"
        exit 1
fi

# echo all the commands and the current time and date to the AIXpert log
set -x 
date
echo $0

# A value of 0 indicates that Undo rule need not be created. This variable
# will be set later in the script if there is anything to be undone.
undo=0

sed_flag=`sedmgr|head -1|awk -F ":" '{print $2}'|awk -F "+" '{print $1}'`
sedmode=`echo $sed_flag|grep setidfiles`
monitr=`sedmgr|tail -1|awk '{print $NF}'|grep monitor`

# Check whether AIXPERT_CHECK_REPORT environment variable is set or not.
report=`echo $AIXPERT_CHECK_REPORT`

if [ "$sedmode" = "" ]
then
	if [ "$report" = "1" ]
	then
		dspmsg -s 32 aixpert.cat 2 "sedconfig.sh: Stack Execution Disable\
 feature is not enabled for setidfiles\n" >>$REPORT
		dspmsg -s 32 aixpert.cat 2 "sedconfig.sh: Stack Execution Disable\
 feature is not enabled for setidfiles\n" >>$AIXPERT_FIFO
		exit 1
	fi

	undo=1
	# enable SED feature for setidfiles
	sedmgr -m setidfiles -o off

	if [ $? -ne 0 ]
	then
		dspmsg -s 32 aixpert.cat 3 "sedconfig.sh: sedmgr command failed\n"
		exit 1
	fi
else
	# for undo consistency
	if [ "$report" = "1" ]
	then
		exit 0
	else
		undo=1
	fi
fi

# Undo action
if [ "$monitr" = "" ]
then
	echo "sedmgr -m" "$sed_flag" "-o off" >$TMP$PID
else
	echo "sedmgr -m" "$sed_flag" "-o on" >$TMP$PID
fi

if [ "$undo" = "1" ]
then
	time=`date +%s`
	# Create Undo script $SCPTDIR/Undo$1$time
	echo "#!/usr/bin/ksh\nexport PATH=/usr/bin:/usr/sbin:\$PATH\n" >$SCPTDIR/Undo$1$time
	echo "exec 1>>$LOG\nexec 2>&1\nset -x\ndate\necho" '$0' >>$SCPTDIR/Undo$1$time
	cat $TMP$PID >>$SCPTDIR/Undo$1$time
	rm $TMP$PID
	chmod ug+x $SCPTDIR/Undo$1$time

	empty=`grep "^<AIXPertUndo>" $UNDOXML`
	if [ "$empty" = "" ]
	then
		echo "\n<AIXPertUndo>\n</AIXPertUndo>" >> $UNDOXML
	fi

	# Get the rulename and put it in undo rule
	name=`echo $AIXPERT_NAME`
	# Get the rule description & pass it to undo rule
	desc=`echo $AIXPERT_DESC`

	# Add an undo XML rule to the file $UNDOXML
	awk -v rulehalf1="\t<AIXPertEntry name=\"$name\">\n\
\t\t<AIXPertRuleType type=\"Undo\"/>\n\
\t\t<AIXPertDescription>Undo action for \"$desc\"</AIXPertDescription>\n\
\t\t<AIXPertPrereqList/>\n"\
 -v rulehalf2="\t\t<AIXPertCommand>$SCPTDIR/Undo$1$time\
</AIXPertCommand>\n\t\t<AIXPertArgs/>\n\
\t\t<AIXPertGroup>Miscellaneous Rules</AIXPertGroup>\n\
\t</AIXPertEntry>" '{if(match($0,"^[\t ]*</AIXPertUndo>")==0) print $0;\
 else print rulehalf1 rulehalf2 "\n" $0}' $UNDOXML >$TMP$PID
	mv $TMP$PID $UNDOXML
fi

exit 0


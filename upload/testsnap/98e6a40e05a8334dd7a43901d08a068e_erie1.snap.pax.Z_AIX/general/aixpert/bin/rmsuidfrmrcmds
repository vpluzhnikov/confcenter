#!/usr/bin/ksh
# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# bos610 src/bos/usr/lib/security/aixpert/scripts/rmsuidfrmrcmds.sh 1.4 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 2006,2007 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)15	1.4  src/bos/usr/lib/security/aixpert/scripts/rmsuidfrmrcmds.sh, aixpert, bos610 3/21/07 05:03:03
# IBM_PROLOG_END_TAG 
#	COMPONENT_NAME		: (AIXPERT) rmsuidfrmrcmds.sh
#	FUNCTIONS		: None
#	ORIGINS			: 27
#
#	Command Line Arguments	: This script takes two command line arguements.
#				The first argument  should be either "r" or "s",
#				i.e., for "Remove" or "Set" SUID bit.
#				Second argument should be the rulename.
#				Syntax: rmsuidfrmrcmds {r|s} rulename
#	OUTPUT			: None
#
#	Description		: This script removes the SUID bit from the r-commands,
#				when "r" is passed as first argument. When "s" is passed
#				as first argument, it sets SUID bit of the r-commands.
#				This script generates Undo script and rule dynamically.
#				This script should be run with superuser privileges.
#

export PATH=/usr/bin:/usr/sbin:$PATH

# Determine the mode of the specified file in sysck.cfg
detmode()
{
awk -F ":" -v file=$1 ' BEGIN {x=0}
{
	if(NF > 1) {
		if(match($0,file) != 0)
			x=1;
		else 
			x=0
	}
	else {
		if(x) {
			if(match($0,"mode") != 0) {
				print $0
				exit 1
			}
		}
	}
}' /etc/security/sysck.cfg
}

# Initialize variables AIXPERT_FIFO, LOG, REPORT, SCPTDIR and UNDOXML
. /etc/security/aixpert/bin/initialize_variables

TMP=/etc/security/aixpert/tmp/rmsuidfrmrcmds
PID=$$

# Log output and errors to /etc/security/aixpert/log/aixpert.log
exec 1>>$LOG
exec 2>&1

if [ $# -ne 2 ] || ( [ $1 != "r" ] && [ $1 != "s" ] )
then
	dspmsg -s 26 aixpert.cat 1 "Usage : rmsuidfrmrcmds {r|s} rulename\n"
	exit 1
fi

# echo all the commands and the current time and date to the AIXpert log
set -x
date
echo $0

# A value of 0 indicates that Undo rule need not be created. This variable
# will be set later in the script if there is anything to be undone.
undo=0

# Check whether AIXPERT_CHECK_REPORT environment variable is set or not.
report=`echo $AIXPERT_CHECK_REPORT`

# Counter to determine the number of failures in Dynamic Security Check
counter=0

# List of remote commands
list="/usr/bin/rsh /usr/bin/rdist /usr/bin/rexec /usr/bin/remsh\
 /usr/bin/rlogin /usr/bin/rcp"

# When the argument one is not "s", remove the SUID from r-commands.
if [ "$1" != "s" ]
then	
	for i in $list
	do
		# If SUID bit is set on the binary $i
		if [ -u $i ]
		then
			# Dynamic Security Report
			if [ "$report" = "1" ]
			then
				counter=`expr $counter + 1`
				dspmsg -s 26 aixpert.cat 2 "rmsuidfrmrcmds.sh:\
 File %s has SUID bit set\n" $i >>$REPORT
				dspmsg -s 26 aixpert.cat 2 "rmsuidfrmrcmds.sh:\
 File %s has SUID bit set\n" $i >>$AIXPERT_FIFO
			else

				undo=1
				modecal=`detmode $i`
				rc=$?
				curmode=`echo $modecal|awk '{print $NF}'`
				
				if [ $rc -eq 1 ] && [ "$curmode" != "" ]
				then
					nosuidmod=`echo $curmode|awk '/SUID/\
 {gsub("^SUID,",""); gsub(",SUID,",","); gsub(",SUID$",""); print $0}'`
					chmod u-s $i
					/bin/sysck -a $i mode=$nosuidmod
					/bin/sysck -y $i
					echo "chmod u+s $i" >>$TMP$PID
					echo "/bin/sysck -a $i mode=\"$curmode\"" >>$TMP$PID
					echo "/bin/sysck -y $i" >>$TMP$PID
				else
					chmod u-s $i
					echo "chmod u+s $i" >>$TMP$PID
				fi
			fi
		else
			# for undo consistency
			if [ "$report" != "1" ]
			then
				undo=1
				modecal=`detmode $i`
				rc=$?
				curmode=`echo $modecal|awk '{print $NF}'`
				if [ $rc -eq 1 ]
				then
					echo "chmod u+s $i" >>$TMP$PID
					echo "/bin/sysck -a $i mode=\"$curmode\"" >>$TMP$PID
					echo "/bin/sysck -y $i" >>$TMP$PID
				else
					echo "chmod u+s $i" >>$TMP$PID
				fi
			fi
		fi

	done
elif [ "$1" = "s" ]
then
	for i in $list
	do
		# If SUID bit is not set on the binary $i
		if [ ! -u $i ]
		then
			# Dynamic Security Report
			if [ "$report" = "1" ]
			then
				counter=`expr $counter + 1`
				dspmsg -s 26 aixpert.cat 3 "rmsuidfrmrcmds.sh:\
 SUID bit is not set for file %s\n" $i >>$REPORT
				dspmsg -s 26 aixpert.cat 3 "rmsuidfrmrcmds.sh:\
 SUID bit is not set for file %s\n" $i >>$AIXPERT_FIFO
			else
				undo=1
				modecal=`detmode $i`
				rc=$?
				curmode=`echo $modecal|awk '{print $NF}'`

				if [ $rc -eq 1 ] && [ "$curmode" != "" ]
				then
					suide=`echo $curmode|grep SUID`
					if [ -z "$suide" ]
					then
						suidmod="SUID," $curmode
					else
						suidmod=$curmode
					fi
					chmod u+s $i
					/bin/sysck -a $i owner group mode=$suidmod
					/bin/sysck -y $i
					echo "chmod u-s $i" >>$TMP$PID
					echo "/bin/sysck -a $i owner group\
 mode=\"$curmode\"" >>$TMP$PID
					echo "/bin/sysck -y $i" >>$TMP$PID
				else
					chmod u+s $i
					echo "chmod u-s $i" >>$TMP$PID
				fi
			fi
		else
			# for undo consistency
			if [ "$report" != "1" ]
			then
				undo=1
				modecal=`detmode $i`
				rc=$?
				curmode=`echo $modecal|awk '{print $NF}'`
				if [ $rc -eq 1 ]
				then
					echo "chmod u-s $i" >>$TMP$PID
					echo "/bin/sysck -a $i owner group\
 mode=\"$curmode\"" >>$TMP$PID
					echo "/bin/sysck -y $i" >>$TMP$PID
				else
					echo "chmod u-s $i" >>$TMP$PID
				fi
			fi
		fi

	done
fi

# Exit for Dynamic Security Check
if [ "$report" = "1" ]
then
	if [ $counter -ne 0 ]
	then
		exit 1
	else
		exit 0
	fi
fi

if [ "$undo" = "1" ]
then
	time=`date +%s`
	# Create Undo script $SCPTDIR/Undo$2$time
	echo "#!/usr/bin/ksh\nexport PATH=/usr/bin:/usr/sbin:\$PATH\n" >$SCPTDIR/Undo$2$time
	echo "exec 1>>$LOG\nexec 2>&1\nset -x\ndate\necho '$0'" >>$SCPTDIR/Undo$2$time
	cat $TMP$PID >>$SCPTDIR/Undo$2$time
	rm $TMP$PID
	chmod ug+x $SCPTDIR/Undo$2$time

	# Check if UNDOXML file has <AIXPertUndo> tag or not
	empty=`grep "^<AIXPertUndo>" $UNDOXML`
	if [ "$empty" = "" ]
	then
		echo "\n<AIXPertUndo>\n</AIXPertUndo>" >> $UNDOXML
	fi

	# Get the rulename and put it in undo rule
	name=`echo $AIXPERT_NAME`
	# Get the rule description & pass it to undo rule
	desc=`echo $AIXPERT_DESC`

	# Add an undo XML rule to the file $UNDOXML
	awk -v rulehalf1="\t<AIXPertEntry name=\"$name\">\n\
\t\t<AIXPertRuleType type=\"Undo\"/>\n\
\t\t<AIXPertDescription>Undo action for \"$desc\"</AIXPertDescription>\n\
\t\t<AIXPertPrereqList/>\n"\
 -v rulehalf2="\t\t<AIXPertCommand>$SCPTDIR/Undo$2$time</AIXPertCommand>\n\
\t\t<AIXPertArgs/>\n\t\t<AIXPertGroup>Disable SUID of commands</AIXPertGroup>\n\
\t</AIXPertEntry>" '{if(match($0,"^[\t ]*</AIXPertUndo>")==0) print $0;\
 else print rulehalf1 rulehalf2 "\n" $0}' $UNDOXML >>$TMP$PID
	mv $TMP$PID $UNDOXML
fi

exit 0

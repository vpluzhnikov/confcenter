
auditpr[3]:

*	shmget() 
	SHM_Create = printf "key: %d size: %ld flags: %o shmid: %d"

*	adjtime()
	PROC_Adjtime = printf "old time: %T, delta: %d:%d"

*	settimer()
	PROC_Settimer = printf "old time: %T, new time: %T"

*	mknod()
	FILE_Mknod = printf "mode: %o dev: %D filename %s"

*	mknodat()
	FILE_Mknodat = printf "mode: %o dev: %D filename %s dirfd %d dirpath %s"

*	mkdev
	DEV_Create = printf "mode: %o dev: %D filename %s"
	DEV_Start = printf " %s "

auditpr:

* kernel proc events 

*	fork()
	PROC_Create = printf "forked child process %d"

*	exit()
	PROC_Delete = printf "exited child process %d, rc: %d, filename: %s"

*	exec()
	PROC_Execute = printf "euid: %d egid: %d epriv: %x:%x name %s"

*	exec() of a large page data process
	PROC_LPExecute = printf "euid: %d egid: %d epriv: %x:%x name %s"

*	setuidx()
	PROC_RealUID = printf "real uid: %d"
	PROC_AuditID = printf "login uid: %d"
	PROC_SetUserIDs = printf "effect: %d, real: %d, saved: %d, login: %d"
	TSDTPolicy = printf "%s"
	TE_Untrusted = printf "%s"
	TE_FileWrite = printf "%s"

*	setgidx()
	PROC_RealGID = printf "old rgid: %d, new gid: %d, which: %s"

*	accessx()
	FILE_Accessx = printf "mode: %o, who: %d, path: %s"

*	accessxat()
	FILE_Accessxat = printf "mode: %o, who: %d, path: %s dirfd: %d, dirpath: %s"

*	statacl()
	FILE_StatAcl = printf "cmd: %o, path: %s"

*	chxacl()
	FILE_WriteXacl = printf "path: %s, ACL: %C"

*	fchxacl()
	FILE_FWriteXacl = printf "fd: %d, ACL: %C"

*	statxacl()
	FILE_ReadXacl = printf "path: %s"

*	statxacl()
	FILE_FReadXacl = printf "fd: %d"

*	aclxcntl()
	SEC_aclxcntl = printf "path: %s, cmd: %d"

*	statpriv()
	FILE_StatPriv = printf "cmd: %o, path: %s"

*	revoke()
	FILE_Revoke = printf "path: %s"

*	frevoke()
	FILE_Frevoke = printf "fd: %d"
 
* 	usrinfo()
	PROC_Environ = printf "buf: %s"

* 	setrlimit()
	PROC_Limits = printf ""

* 	nice()
	PROC_SetPri = printf "new priority: %d"

* 	setpri() 
	PROC_Setpri = printf "new priority: %d"

* 	setpriv() 
	PROC_Privilege = printf "cmd: %x privset: %x:%x"

*	settimer()
	PROC_Settimer = printf "old time: %x:%x, new time: %x:%x"

*	adjtime()
	PROC_Adjtime = printf "old time: %x:%x, delta: %x:%x"

*	ptrace()
	PROC_Debug = printf "pid: %d command: %d"

*	kill()
	PROC_Kill = printf "pid: %d, sig: %d"

*	setpgid()
	PROC_Setpgid = printf "pid: %d, pgrp: %d"

*	ld_loadmodule()
	PROC_Load = printf "file: %s"
	PROC_LoadMember = printf "file: %s, member: %s"
	PROC_LoadError = printf "flags: %x, libpath: %s, file: %s"

*	setgroups()
	PROC_SetGroups = printf "group set: %G"

*  sysconfig()
	PROC_Sysconfig = printf "%x"

*  sys_parm
	PROC_SysParm = printf "parmflag: %d, value: %08x%08x"

*	setroles()
	PROC_SetRoles = printf "rc: %d numroles: %d roleset: %d,%d,%d,%d,%d,%d,%d,%d" 

*	check_aas()
	PROC_ChkAuth = printf "rc=%d, usedauth=%s"

*	audit

*	audit()
	AUD_It = printf "cmd: %d arg: %d"

*	auditbin()
	AUD_Bin_Def = printf "cmd: %d cur_fd: %d next_fd: %d, threshold: %d"

*	auditevents()
	AUD_Events = printf "cmd: %d"

*	auditobj()
	AUD_Objects = printf "cmd: %d"

*	auditproc()
	AUD_Proc = printf "pid: %d cmd: %d"

*	acct()  
	ACCT_Disable = printf ""
	ACCT_Enable = printf "file: %s"

* file system events 

* 	open() and creat()
	FILE_Open = printf "flags: %d mode: %o fd: %d filename %s"
	TCB_Leak = printf ""
	TCB_Mod = printf ""
	TCB_Exec = printf "filename: %s"

*	openxat()
	FILE_Openxat = printf "flags: %d mode: %o dirfd: %d fd: %d pathname: %s"

* 	read() 
	FILE_Read = printf "file descriptor = %d filename = %s"

* 	write() 
	FILE_Write = printf "file descriptor = %d filename = %s"

* 	close() 
	FILE_Close = printf "file descriptor = %d"

* 	link() 
	FILE_Link = printf "linkname %s filename %s"

* 	linkat() 
	FILE_Linkat = printf "tdirfd: %d target: %s ldirfd: %d linkname: %s tdirpath: %s ldirpath: %s"

* 	unlink() 
	FILE_Unlink = printf "filename %s"

* 	unlinkat() 
	FILE_Unlinkat = printf "filename %s dirfd %d dirpath %s"

* 	rename() 
	FILE_Rename = printf "frompath: %s topath: %s"

* 	renameat() 
	FILE_Renameat = printf "fromdirfd: %d frompath: %s todirfd: %d topath: %s fdirpath: %s tdirpath: %s"

* 	chown()
	FILE_Owner = printf "owner: %d group: %d filename %s"

* 	chmod() 
	FILE_Mode = printf "mode: %o filename %s"

*	fchmod()
	FILE_Fchmod = printf "mode: %o file descriptor %d"

*	fchmodat()
	FILE_Fchmodat = printf "mode: %o filename: %s dirfd: %d dirpath: %s"

*	fchown()
	FILE_Fchown = printf "owner: %d group: %d file descriptor %d"

*	fchownat()
	FILE_Fchownat = printf "owner: %d group: %d filename: %s dirfd: %d dirpath: %s"

*	truncate()
	FILE_Truncate = printf "filename = %s"

*	symlink()
	FILE_Symlink = printf "link = %s, target = %s"

*	symlinkat()
	FILE_Symlinkat = printf "target: %s, link: %s linkfd: %d, ldirpath: %s"

*	pipe()
	FILE_Pipe = printf "read: %d write: %d"

*	mknod()
	FILE_Mknod = printf "mode: %o dev: %d filename %s"

*	mknodat()
	FILE_Mknodat = printf "mode: %o dev: %d filename %s dirfd %d dirpath %s"

*	fcntl(F_DUPFD)
	FILE_Dupfd = printf "original fd: %d new fd: %d"

* EFS : Encrypted File System
	EFS_WriteKS = printf "Keystore path: %s"

*  fscntl()
	FS_Extend = printf "vfs: %d, cmd: %d"

* 	mount() 
	FS_Mount = printf "mount: object %s stub %s"

* 	umount() 
	FS_Umount = printf "umount: object %s stub %s"

* 	chacl() 
	FILE_Acl = printf "filename: %s, ACL: %A"
	FILE_Facl = printf "fd: %d, ACL: %A"

* 	chpriv() 
	FILE_Privilege = printf "pcl: %d"
	FILE_Chpriv = printf "file: %s, pcl: %P"
	FILE_Fchpriv = printf "fd: %d, pcl: %P"

*	chdir()
	FS_Chdir = printf "change current directory to: %s"

*	fchdir()
	FS_Fchdir = printf "fd = %d"

*	chroot()
	FS_Chroot = printf "change root directory to: %s"

*	rmdir()
	FS_Rmdir = printf "remove of directory: %s"

*	mkdir()
	FS_Mkdir = printf "mode: %o dir: %s"

*	mkdirat()
	FS_Mkdirat = printf "mode: %o dir: %s dirfd: %d dirpath: %s"

*	utimes()
	FILE_Utimes = printf "filename: %s dirfd: %d"

*	stat()
	FILE_Stat = printf "cmd: %x filename: %s"

*	statxat()
	FILE_Statxat = printf "cmd: %x filename: %s dirfd: %d dirpath: %s"

* SVIPC system events 

* 	msgget() 
	MSG_Create = printf "key: %d flags: %o msqid: %d"

* 	msgrcv() 
	MSG_Read = printf "msqid: %d muid: %d mpid: %d"

* 	msgsnd()
	MSG_Write = printf "msqid: %d"

* 	msgctl() 
	MSG_Delete = printf "msqid: %d"
	MSG_Owner = printf "msqid: %d owner: %d group: %d mode: %o"
	MSG_Mode = printf "msqid: %d mode: %o"

* 	semget() 
	SEM_Create = printf "key: %d nsems: %d flags: %o semid: %d"

* 	semop() 
	SEM_Op = printf "semid: %d"

* 	semctl()
	SEM_Delete = printf "semid: %d"
	SEM_Owner = printf "semid: %d owner: %d group: %d mode: %o"
	SEM_Mode = printf "semid: %d mode: %o"

* 	shmget() 
	SHM_Create = printf "key: %d size: %d flags: %o shmid: %d"

*	shmget(SHM_LGPAGE)
	SHM_LPCreate = printf "key: %d size: %ld flags: %o shmid: %d"

* 	shmat() 
	SHM_Open = printf "shmid: %d"

*	shmat() 
	SHM_Detach = printf "shmid: %d"

* 	shmctl() 
	SHM_Close = printf "shmid: %d"
	SHM_Owner = printf "shmid: %d owner: %d group: %d"
	SHM_Mode = printf "shmid: %d mode: %o"

* TCPIP user level

	TCPIP_config = printf "%s %s %s %s %s"
	TCPIP_host_id = printf "%s %s %s %s"
	TCPIP_route = printf "%s %s %s %s %s"
	TCPIP_connect = printf "%s %s %s %s %s"
	TCPIP_data_out = printf "%s %s %s %s %s"
	TCPIP_data_in = printf "%s %s %s %s %s"
	TCPIP_access = printf "%s %s %s %s %s"
	TCPIP_set_time = printf "%s %s %s %s"

* TCPIP kernel level

 	TCP_ksocket = printf "fd%d %s, %s, Protocol %d"
 	TCP_ksocketpair = printf "fd%d fd%d %s, %s, Protocol %d"
	TCP_kclose = printf "fd%d"
 	TCP_ksetopt = printf "fd%d Port %s, Level %d, Option %d, Value %d"
  	TCP_kbind = printf "fd%d %S"
  	TCP_klisten = printf "fd%d qlimit %d"
  	TCP_kconnect = printf "fd%d %L"
  	TCP_kaccept = printf "fd%d Port %S  %L"
  	TCP_kshutdown = printf "fd%d %s"
	TCP_ksend = printf "fd%d %s"
	TCP_kreceive = printf "fd%d %s"

* commands

* 	tsm
	USER_Login = printf "user: %s tty: %s"
	PORT_Locked = printf "Port %s locked due to invalid login attempts"
	TERM_Logout = printf "%s"

*  rlogind/telnetd
	USER_Exit = printf "tty: %s"

* 	sysck
	SYSCK_Check = printf "%s"
	SYSCK_Update = printf "%s"
	SYSCK_Install = printf "%s"
	SYSCK_Delete = printf "%s %s"


*	tcbck
	TCBCK_Check = printf "%s"
	TCBCK_Update = printf "%s"
	TCBCK_Delete = printf "%s"

*	sedmgr
	SEDMGR_Odm = printf "%s"
	SEDMGR_File = printf "%s"

* 	usrck
	USER_Check = printf "%s %s %s"
	USRCK_Error = printf "%s %s"

* 	logout
	USER_Logout = printf "%s"

*	chsec
	PORT_Change = printf "Changed attributes of port %s; new values: %s"

*	chsec
	SECORDER_Change = printf "database:%s new values: %s"

*	chsec
	LPA_Change = printf "database:%s new values: %s"

* 	chuser
	USER_Change = printf "%s %s"

* 	rmuser
	USER_Remove = printf "%s"

* 	mkuser
	USER_Create = printf "%s %s"

* 	setgroups
	USER_SetGroups = printf "%s %s"

* 	setsenv
	USER_SetEnv = printf "environment %s"

* 	su
	USER_SU = printf "%s"

*	chpass
	USER_Chpass = printf "user: %s, msg: %s"

*	usrck
	USER_Locked = printf "user %s has been locked"

*	chsec
	USER_Unlocked = printf "user %s has been unlocked"

* 	grpck
	GROUP_User = printf "grpck: removed user %s from %s in /etc/group"

* 	grpck
	GROUP_Adms = printf "grpck: removed admin user %s from %s in /etc/security/group"

* 	chgroup
	GROUP_Change = printf "%s %s"

* 	mkgroup
	GROUP_Create = printf "%s %s"

* 	rmgroup
	GROUP_Remove = printf "%s"

* 	passwd
	PASSWORD_Change = printf "%s"

* 	pwdadm
	PASSWORD_Flags = printf "%s %s"

* 	pwdck
	PASSWORD_Check = printf "User = %s Error/Fix = %s Status = %s"
	PASSWORD_Ckerr = printf "User/File = %s Error = %s"

*	pagdel
	USER_PagDelete = printf "username: %s"

*	paginit
	USER_Paginit = printf "tty: %s"


* 	startsrc
	SRC_Start = printf "%s"

* 	stopsrc
	SRC_Stop = printf "%s"

* 	addssys
	SRC_Addssys = printf "%s"

* 	chssys
	SRC_Chssys = printf "%s"

* 	addserver
	SRC_Addserver = printf "%s"

* 	chserver
	SRC_Chserver = printf "%s"

* 	rmssys
	SRC_Delssys = printf "%s"

* 	rmserver
	SRC_Delserver = printf "%s"

* 	enq
	ENQUE_admin = printf "queue = %s device = %s request = %s to: %s op = %s"

* 	qdaemon
	ENQUE_exec = printf "queue = %s request = %s host = %s file = %s to: %s op = %s"

* 	sendmail
	SENDMAIL_Config = printf "%s"
	SENDMAIL_ToFile = printf "Mail from user %s to file %s"
	MAIL_ToUser = printf "sender: %s  recipient: %s"

* 	at
	AT_JobAdd = printf "file name = %s User = %s time = %s"
	AT_JobRemove = printf "file name = %s User = %s"

* 	cron
	CRON_JobRemove = printf "file name = %s User = %s time = %s"
	CRON_JobAdd = printf "file name = %s User = %s time = %s"
	CRON_Start = printf "event = %s cmd = %s time = %s"
	CRON_Finish = printf "user = %s pid = %s time = %s"

*	nvload
	NVRAM_Config = printf " %s"

*	cfgmgr
	DEV_Configure = printf " device %s"

*	chdev and mkdev
	DEV_Change = printf " params = %s"

*	mkdev
	DEV_Create = printf "mode: %o dev: %d filename %s"
	DEV_Start = printf " %s "

*	installp
	INSTALLP_Inst = printf "Option Name: %s Level: %s  Installation %s"
	INSTALLP_Exec = printf "Option Name: %s Level: %s  Executed Program %s"

*	rmdev
	DEV_Stop = printf " device %s"
	DEV_UnConfigure = printf " device %s"
	DEV_Remove = printf " device %s"

*  DSMIT
	DSMIT_start = printf "%s"
	DSMIT_end = printf "%s"

* LVM events

*	lchangelv, lextendlv, lreducelv
	LVM_ChangeLV= printf " %s "

*	lchangepv, ldeletepv, linstallpv
	LVM_ChangeVG = printf " %s "

*	lcreatelv
	LVM_CreateLV = printf " %s "

*	lcreatevg
	LVM_CreateVG = printf " %s "

*	ldeletepv
	LVM_DeleteVG = printf " %s "

*	rmlv
	LVM_DeleteLV = printf " %s "

*	lvaryoffvg
	LVM_VaryoffVG = printf " %s "

*	lvaryonvg
	LVM_VaryonVG = printf " %s "

*	Logical volume operations
	LVM_AddLV = printf "Logical Volume ID: %08x%08x%08x%08x.%d"
	LVM_KDeleteLV = printf "Logical Volume ID: %08x%08x%08x%08x.%d"
	LVM_ExtendLV = printf "Logical Volume ID: %08x%08x%08x%08x.%d %s"
	LVM_ReduceLV = printf "Logical Volume ID: %08x%08x%08x%08x.%d %s"
	LVM_KChangeLV = printf "Logical Volume ID: %08x%08x%08x%08x.%d %s"
	LVM_AvoidLV = printf "Logical Volume ID: %08x%08x%08x%08x.%d %s"

*	Physical volume operations
	LVM_MissingPV = printf "Volume Group ID: %08x%08x%08x%08x Physical Volume Index: %d"
	LVM_AddPV = printf "Volume Group ID: %08x%08x%08x%08x Physical Volume device(major,minor): %X"
	LVM_AddMissPV = printf "Volume Group ID: %08x%08x%08x%08x Physical Volume Index: %d"
	LVM_DeletePV = printf "Volume Group ID: %08x%08x%08x%08x Physical Volume Index: %d"
	LVM_RemovePV = printf "Volume Group ID: %08x%08x%08x%08x Physical Volume Index: %d"
	LVM_AddVGSA = printf "Volume Group ID: %08x%08x%08x%08x Physical Volume Index: %d"
	LVM_DeleteVGSA = printf "Volume Group ID: %08x%08x%08x%08x Physical Volume Index: %d"

*	Volume group operations
	LVM_SetupVG = printf "Volume Group ID: %08x%08x%08x%08x"
	LVM_DefineVG = printf "Volume Group ID: %08x%08x%08x%08x"
	LVM_KDeleteVG = printf "Volume Group ID: %08x%08x%08x%08x"
	LVM_ChgQuorum = printf "Volume Group ID: %08x%08x%08x%08x %s"
	LVM_Chg1016 = printf "Volume Group ID: %08x%08x%08x%08x New Factor value: %d"
	LVM_UnlockDisk = printf "Volume Group ID: %08x%08x%08x%08x"
	LVM_LockDisk = printf "Volume Group ID: %08x%08x%08x%08x"

* 	backup, restore
	BACKUP_Export = printf " %s "
	BACKUP_Priv = printf " %s "
	RESTORE_Import = printf " %s "

* 	shell
	USER_Shell = printf "tty: %s "

*	reboot
	USER_Reboot = printf " %s "
	PROC_Reboot = printf "cmd: %d  time: %T"

* objects (files)

*	/etc/security/environ
	S_ENVIRON_WRITE = printf "%s"

*	/etc/group
	S_GROUP_WRITE = printf "%s"

*	/etc/security/limits
	S_LIMITS_WRITE = printf "%s"

*	/etc/security/login.cfg
	S_LOGIN_WRITE = printf "%s"

*	/etc/security/passwd
	S_PASSWD_READ = printf "%s"

*	/etc/security/passwd
	S_PASSWD_WRITE = printf "%s"

*	/etc/security/user
	S_USER_WRITE = printf "%s"

*	/etc/security/audit/config
	AUD_CONFIG_WR = printf "%s"

*	/etc/security/roles
	ROLE_Create = printf "%s %s"

*	/etc/security/roles
	ROLE_Change = printf "Role: %s  Attribute: %s"

*	/etc/security/roles
	ROLE_Remove = printf "%s"

*	/etc/security/authorizations
	AUTH_Create = printf "%s %s"

*	/etc/security/authorizations
	AUTH_Change = printf "Authorization: %s  Attribute: %s"

*	/etc/security/authorizations
	AUTH_Remove = printf "%s"

*	/etc/init
	INIT_Start = printf "pid: %d, command: %s"
	INIT_End = printf "pid: %d, status: %x"

*	/etc/security/privcmds
	CMD_Change = printf "Command: %s  Attribute: %s"
	CMD_Remove = printf "%s"

*	/etc/security/privdevs
	DEV_Change = printf "Device: %s  Attribute: %s"
	DEV_Remove = printf "%s"

*	/etc/security/privfiles
	PFILE_Change = printf "File: %s  Attribute: %s"
	PFILE_Remove = printf "%s"

*	Process privileges
	PROC_Change = printf "Process: %s  Attribute: %s"
	
*	Set Kernel Security Tables
	KST_Change = printf "Tables: %s  Details: %s"


* miscellaneous 
	
*	count of audit recs authat didn't get written
	AUD_Lost_Recs = printf "Recs Lost: %d"

* SecureWay Directory Server

* 	LDAP_Bind
	LDAP_Bind = printf "ConnectID: %d Host: %s Port: %d BindDN: %s"

* 	LDAP_Unbind
	LDAP_Unbind = printf "ConnectID: %d"

* 	LDAP_Add
	LDAP_Add = printf "ConnectID: %d Entry: %s"

* 	LDAP_Delete
	LDAP_Delete = printf "ConnectID: %d Entry: %s"

* 	LDAP_Modify
	LDAP_Modify = printf "ConnectID: %d Entry: %s"

* 	LDAP_Modifydn
	LDAP_Modifydn = printf "ConnectID: %d NewEntry: %s OldEntry: %s"

* 	LDAP_Search
	LDAP_Search = printf "ConnectID: %d Search: %s"

* 	LDAP_Compare
	LDAP_Compare = printf "ConnectID: %d Compare: %s"

* Certificate Authentication Services

*	certcreate
	CERT_Create = printf "User: %s %s tty: %s"

*	certdelete
	CERT_Delete = printf "User: %s %s"

*	certget
	CERT_Get = printf "User: %s %s"

*	certlist
	CERT_List = printf "User: %s %s"

*	certadd
	CERT_Add = printf "User: %s %s"

*	certlink
	CERT_Link = printf "User: %s %s"

*	certverify
	CERT_Verify = printf "User: %s %s tty: %s"

*	certrevoke
	CERT_Revoke = printf "User: %s %s tty: %s"

*	keydelete
	KEY_Delete =  printf "User: %s %s tty: %s"

*	keylist
	KEY_List = printf "User: %s %s tty: %s"

*	keyadd
	KEY_Add = printf "User: %s %s tty: %s"

* RTIPC system events

*	rtsem_open()
	RTSEM_Open = printf "flags: %o mode: %o value: %d name: %s usemid: %08x%08x semx: %d"

*	rtsem_close()
	RTSEM_Close = printf "semx: %d"

*	rtsem_unlink()
	RTSEM_Unlink = printf "name: %s"

*	rtsem_init()
	RTSEM_Init = printf "pshared: %d value: %d semx: %d"

*	rtsem_destroy()
	RTSEM_Destroy = printf "semx: %d"

*	rtsem_getvalue()
	RTSEM_Getvalue = printf "semx: %d value: %d"
	
*	rtsem_post()
	RTSEM_Post = printf "semx: %d"

*	rtsem_wait()
	RTSEM_Wait = printf "semx: %d"

*	rtsem_trywait()
	RTSEM_TryWait = printf "semx: %d" 

*	rtmq_open()
	RTMQ_Open = printf "flags: %o mode: %o name: %s mqd: %x mqx: %d"

*	rtmq_close()
	RTMQ_Close = printf "mqd: %x"
	
*	rtmq_unlink()
	RTMQ_Unlink = printf "name: %s"
	
*	rtmq_getattr()
	RTMQ_Getattr = printf "mqd: %x flags: %o maxmsg: %d msgsize: %d curmsg: %d"

*	rtmq_setattr()
	RTMQ_Setattr = printf "mqd: %x flags: %o oflags: %o omaxmsg: %d omsgsize: %d ocurmsg: %d"
	
*	rtmq_notify()
	RTMQ_Notify = printf "mqd: %x type: %d signo: %d tid: %d"
	RTMQ_NotifyCanc = printf "mqd: %x" 

*	rtmq_receive()
	RTMQ_Receive = printf "mqd: %x size: %d prio: %d" 
	
*	rtmq_send()
	RTMQ_Send = printf "mqd: %x size: %d prio: %d" 

*	rtshm_open()
	RTSHM_Open = printf "flags: %o mode: %o fd: %d name: %s" 

*	rtshm_unlink()
	RTSHM_Unlink = printf "name: %s"

* Advanced Accounting system events

*	_acctctl(ACC_START, ...)
	AACCT_On = printf "AACCT: startup"

*	_acctctl(ACC_STOP, ...)
	AACCT_Off = printf "AACCT: shutdown"

*	_acctctl(ACC_ADD_FILE, ...)
	AACCT_AddFile = printf "AACCT: File added: ID %d, size %ld, filename %s"

*	_acctctl(ACC_POST_FILE, ...)
	AACCT_ResetFile = printf "AACCT: File reset: ID %d, filename %s"

*	_acctctl(ACC_RM_FILE, ...)
	AACCT_RmFile = printf "AACCT: File removed: ID %d, filename %s"

*	_acctctl(ACC_SWITCH_FILE, ...)
	AACCT_SwtchFile = printf "AACCT: Active file switched: ID %d"

*	set_trid(..., ON, ...)
	AACCT_TridOn = printf "AACCT: Trid enabled: TRID %d"

*	set_trid(..., OFF, ...)
	AACCT_TridOff = printf "AACCT: Trid disabled: TRID %d"

*	set_interval(System Queue, 0)
	AACCT_SysIntOff = printf "AACCT: System Interval turned off"

*	set_interval(System Queue, time)
	AACCT_SysIntSet = printf "AACCT: System Interval set to %d"

*	set_interval(Process Queue, 0)
	AACCT_PrIntOff = printf "AACCT: Process Interval turned off"

*	set_interval(Process Queue, time)
	AACCT_PrIntSet = printf "AACCT: Process Interval set to %d"

*	projctl_proc(PROJ_SET, ...)
	AACCT_SwtchProj = printf "AACCT: PID %d switched to project %d"

*	proj_regop(PROJ_ADD*, ...)
	AACCT_AddProj = printf "AACCT: Project added: ID %d, name %s"

*	proj_regop(PROJ_REMOVE, ...)
	AACCT_RmProj = printf "AACCT: Project removed: ID %d, name %s"

*	add_policy()
	AACCT_PolLoad = printf "AACCT: Policy loaded: Type %d"

*	remove_policy()
	AACCT_PolUnload = printf "AACCT: Policy unloaded: Type %d"

*	set_email(EMAIL_ON)
	AACCT_NotChange = printf "AACCT: E-mail notification set to %s"

*	set_email(EMAIL_OFF)
	AACCT_NotifyOff = printf "AACCT: E-mail notification disabled"

* Kernel Security Tables

*	sec_getkat()
	SEC_GetKat = printf "rc=%d"

*	sec_getuserkat()
	SEC_GetUserKat = printf "rc=%d"

*	sec_authidtoname()
	SEC_AuthIdToNm = printf "authid=%d, rc=%d"

*	sec_authnametoid()
	SEC_AuthNmToId = printf "auth=%s, rc=%d"

*	sec_checkauth()
	SEC_ChkAuth = printf "auth=%s, rc=%d"

*	sec_checkauthid()
	SEC_ChkAuthId = printf "authid=%d, rc=%d"

*	sec_getkatids()
	SEC_GetKatIds = printf "rc=%d"

*	sec_getrolebyid()
	SEC_GetRoleById = printf "rid=%d, rc=%d"

*	sec_getrolebyname()
	SEC_GetRoleByNm = printf "rname=%s, rc=%d"

*	sec_roleidtoname()
	SEC_RoleIdToNm = printf "rid=%d, rc=%d"

*	sec_rolenametoid()
	SEC_RoleNmToId = printf "rname=%s, rc =%d"

*	sec_setwascid()
	SEC_SetWasCid = printf "cid=%d, rc=%d"

*	sec_getwascid()
	SEC_GetWasCid = printf "cid=%d, rc=%d"

*	sec_getwas()
	SEC_GetWas = printf "cid=%d, rc=%d"

*	sec_setwpscid()
	SEC_SetWpsCid = printf "cid=%d, rc=%d"

*	sec_getwpscid()
	SEC_GetWpsCid = printf "cid=%d, rc=%d"

*	sec_getwps()
	SEC_GetWps = printf "cid=%d, rc=%d"

*	sec_setkst()
	SEC_SetKst = printf "dauths=%d, droles=%d, dpcmds=%d, dpdevs=%d, rc=%d, status=%d"

*	sec_getkpct()
	SEC_GetKpct = printf "rc=%d"

*	sec_getcmdattrs()
	SEC_GetCmdAttrs = printf "path=%s, rc=%d"

*	sec_getkpdt()
	SEC_GetKpdt = printf "rc=%d"

*	sec_getdevattrs()
	SEC_GetDevAttrs = printf "path=%s, rc=%d"

*	sec_getauditrange()
	MLS_GetWAR = printf "cid=%d"

*	sec_setauditrange()
	MLS_SetWAR = printf "cid=%d"

*	sec_setrunmode()
	MLS_SetRunMode = printf "rc=%d"

*	sec_getsecconf()
	MLS_GetSecconf = printf "conf_flag=%d, oper_flag=%d, rc=%d"

*	sec_setsecconf()
	MLS_SetSecconf = printf "rc=%d"

*	sec_settpmode()
	MLS_SetTPMode = printf "mode=%d, rc=%d"

*	sec_getpsec()
	MLS_GetPsec = printf "pid=%d, err=%d"

*	sec_settlibpath()
	MLS_SetTLibpath = printf "err=%d"

*	setppriv()
	MLS_SetPPV = printf "pid=%d"

*	sec_setrtmsglab()
	MLS_SetRtMsglab = printf "msg_name=%s"

*	sec_setmsglab()
	MLS_SetMsglab = printf "msg_id=%d"

*	sec_setrtsemlab()
	MLS_SetRtSemlab = printf "sem_name=%s"

*	sec_setsemlab()
	MLS_SetSemlab = printf "sem_id=%d"

*	sec_setrtshmlab()
	MLS_SetRtShmlab = printf "shm_name=%s"

*	sec_setshmlab()
	MLS_SetShmlab = printf "shm_id=%d"

*	sec_setsyslab()
	MLS_SetSyslab = printf "pid=%d"

*	sec_getpsec()
	MLS_GetPSec = printf "pid=%d"

*	sec_setplab()
	MLS_SetPLab = printf "pid=%d"

*	sec_setptlibmode()
	MLS_SetTLIBMode =  printf "mode=0x%08x"

*	sec_settlibpath()
	MLS_SetTLibPath = printf "path_num=%d"

*	refmon
	RFM_ChkPriv = printf "priv_found=%d, saved_priv=%d req_priv=%d"
	RFM_ChkAps = printf "rc=%d"
	RFM_ChkAas = printf "rc=%d"
	RFM_SetPPriv = printf "rc=%d"
	RFM_Fsf = printf "rc=%d"
	RFM_ApdFsf = printf "mode=%d, rc=%d"
	RFM_MacProc = printf "mode=%d, flag=%d, rc=%d"
	RFM_MacFifo = printf "mode=%d, flag=%d, rc=%d"
	RFM_MacStr = printf "mode=%d, flag=%d, rc=%d"
	RFM_SetObj = printf "flag=%d, rc=%d"
	RFM_SetIpc = printf "flag=%d, rc=%d"
	RFM_MacFs = printf "euid=%d, mode=%d, fsf=%d, flag=%d, rc=%d"
	RFM_Mic = printf "euid=%d, mode=%d, flag=%d, rc=%d"
	RFM_SetIDs = printf "old euid:%d, new euid:%d, old egid:%d, new egid:%d, old ruid:%d, new ruid:%d, command:%s"

* wparmgtclass

	WM_CreateWPAR	= printf "Created WPAR name: %s by user: %s"
	WM_RemoveWPAR	= printf "Removed WPAR name: %s by user: %s"
	WM_StartWPAR	= printf "Started WPAR name: %s by user: %s"
	WM_StopWPAR	= printf "Stopped WPAR name: %s by user: %s"
	WM_RebootWPAR	= printf "Rebooted WPAR name: %s by user: %s"
	WM_SyncWPAR	= printf "Synced WPAR name: %s by user: %s"
	WM_CheckptWPAR	= printf "Checkpointed WPAR name: %s by user: %s"
	WM_ResumeWPAR 	= printf "Resumed WPAR name: %s by user: %s"
	WM_RestartWPAR	= printf "Restarted WPAR name: %s by user: %s"
	WM_ModifyWPAR 	= printf "Modified WPAR name: %s by user: %s"

	WM_SetInitConf 	= printf "Set initial configuration. WPARServer: %s, user: %s"
	WM_SetMonIntv	= printf "Set monitoring interval. Interval: %s, user: %s"
	WM_SetTierMnDsc	= printf "Set monitoring descriptor. Tier name: %s, user: %s"
	WM_ResetConfig	= printf "Reset configuration. User: %s"
	WM_ModifyConfig	= printf "Modify configuration. Property: %s. User: %s"

*	Trusted Execution User level Events
	
	TE_Policies = printf " %s %s"
	TEAdd_Stnz = printf " %s %s"
	TEDel_Stnz =  printf "%s %s"
	TESwitch_algo =  printf "%s %s"
	TEQuery_Stnz =  printf "%s %s"
	TE_VerifyAttr = printf "%s %s"

* IPSEC user level

	IPSEC_chtun = printf "%s %s %s"
	IPSEC_exptun = printf "%s %s %s"
	IPSEC_gentun = printf "%s %s %s %s %s"
	IPSEC_imptun = printf "%s %s %s %s %s"
	IPSEC_lstun = printf "%s %s %s"
	IPSEC_mktun = printf "%s %s %s %s %s"
	IPSEC_rmtun = printf "%s %s %s"
	IPSEC_chfilt = printf "%s %s %s"
	IPSEC_expfilt = printf "%s %s %s"
	IPSEC_genfilt = printf "%s %s %s %s"
	IPSEC_trcbuf = printf "%s %s"
	IPSEC_impfilt = printf "%s %s %s %s"
	IPSEC_lsfilt = printf "%s %s %s %s"
	IPSEC_mkfilt = printf "%s %s %s %s %s %s %s %s"
	IPSEC_mvfilt = printf "%s %s %s"
	IPSEC_rmfilt = printf "%s %s %s %s"
	IPSEC_unload = printf "%s %s %s"
	IPSEC_stat = printf "%s %s %s"
	IKE_tnl_creat = printf "%s %s %s"
	IKE_tnl_delet = printf "%s %s %s"
	IPSEC_p1_nego = printf "%s %s %s"
	IPSEC_p2_nego = printf "%s %s %s"
	IKE_activat_cmd = printf "%s %s %s"
	IKE_remove_cmd = printf "%s %s %s"

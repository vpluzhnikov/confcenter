# IBM_PROLOG_BEGIN_TAG 
# This is an automatically generated prolog. 
#  
# tcpip610 src/tcpip/etc/dhcpcd.ini 1.7 
#  
# Licensed Materials - Property of IBM 
#  
# Restricted Materials of IBM 
#  
# COPYRIGHT International Business Machines Corp. 1995 
# All Rights Reserved 
#  
# US Government Users Restricted Rights - Use, duplication or 
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
#  
# @(#)02      1.7  src/tcpip/etc/dhcpcd.ini, dhcp, tcpip610 12/8/95 11:01:56
# IBM_PROLOG_END_TAG 
#
#   dhcpcd.ini -- DHCP Client configuration file
#	
#
#   This file contains directives that can be specified by the
#   to configure the client.
#
#
#   Do not put any long line without white space in this file.
#
#   A line starting with a '#' character is a comment and is ignored.
#   A '#' on a line which is not part of a quoted string indicates
#   that anything to the right of this character is a comment and should
#   be ignored.
#
#   A continuation character of '\' is supported.  It must be
#	the last non-whitespace character on the line prior to
#	any comments.
#
#


#
#   The directives are specified in the form of 
#   <keyword> <value1> ... <valueN>.
#
#   Here is a list of all the keywords whose value can be specified  
#   in this file:
#
#   Keyword	     Effect
#   -------------    ---------------------------------------------------
#
#   numLogFiles	     The number of log files desired.
#   logFileSize	     The Size of log files in K bytes.
#   logFileName	     The name of the most recent log file.
#   logItem	     One item to be logged.
#
#   interface        The network interface that needs DHCP configuration.
#   clientid	     Specifies whether the client id included in all
#			packets to the server should be the hardware MAC
#			address or the HOSTNAME.
#   smiffer	     A command string to execute to start a program to
#			detect hardware failure/recovery of the network
#			adapter.
#   updateDNS        A command string to execute to cause the DNS server
#			to be updated with the new IP address for the
#			given name.
#   option	     An option requested by this client
#   vendor	     A vendor extension option
#   reject	     An option to be ignored if sent by a server
#   otherOptions     Whether to process options not specifically
#			requested or rejected in this client config file.
#

#
#  Log files.  This set of parameters specifies the log files that will be
#  maintained by this server.  Each parameter is identified by a keyword
#  and followed by its value.
#
#  Keyword	Value	      	Definition
#  --------	------------  	------------------------------------------
#  numLogFiles	0 to n	      	number of log files.  If 0 is specified, 
#				no log file will be maintained and no log 
#				message	is display anywhere.  n is the 
#				maximum number of log files maintained as 
#				the size of the most recent log file 
#				reaches its maximum size and a new log file 
#				is created.
#
#  logFileSize	in K bytes	maximum size of a log file.  When the size 
#				of the most recent log file reaches this 
#				value, it is renamed and a new log file is 
#				created.
#
#  logFileName	file path	name of the most recent log file.  Less 
#				recent log files have the number 1 to 
#				(n - 1) appended to their names; the larger 
#				the number, the less recent the file.
#
#  logItem			One item that will be logged. 
#		SYSERR		System error, at the interface to the platform.
#		OBJERR		Object error, in between objects in the process.
#		PROTERR		Protocol error, between client and server.
#		WARNING		Warning, worth of attention from the user.
#		EVENT		Event occurred to the process.
#		ACTION		Action taken by the process.
#		INFO		Information that might be useful.
#		ACNTING		Who was served when.
#		TRACE		Code flow, for debugging.
#
#
numLogFiles 	4
logFileSize 	100
logFileName	/usr/tmp/dhcpcd.log
logItem		SYSERR
logItem		OBJERR
#logItem		PROTERR
#logItem		WARNING
#logItem		EVENT
#logItem		ACTION
#logItem		INFO
#logItem		ACNTING
#logItem		TRACE



#
#  Network interface.  This parameter specifies a network interface
#  that needs DHCP configuration.  The keyword and its values are as
#  follows:
#
#  Keyword	Value	      	Definition
#  --------	------------  	------------------------------------------
#  interface	<ifName>
#
#                      		DHCP interface.  ifName is the name of 
#				the network interface or any ro represent the
#				first found or all to do all found interfaces
#
#				The interface statement may be immediately followed
#				by a pair of curly brackets, in which
#				the options requested for this interface can be
#				specified.  Options requested within
#				interface curly brackets apply only to
#				this interface.
#  Note: It may be desirable that the client can automaticly detect a
#        network interface via which DHCP is to be performed.  Until
#	 such a mechanism becomes available, this parameter needs to be
#	 specified in this config file.
#
#  clientid     MAC or HOSTNAME
#				The client id to use in all communication
#				with the server.  MAC denotes that the
#				hardware address for the particular interface
#				should be used as the client id.  HOSTNAME
#				denotes that the domain host name should
#				be used as the client id.  
#				The default is HOSTNAME.  The bottom of the
#				file sets MAC.  MAC is better for NIM 
#				environments.
#
#  sniffer     exec string      A string enclosed in quotes to indicate a
#				program to execute to detect hardware
#				failure/recovery for an interface.  The
#				dhcp client will look for signal 23 to
#				indicate that the network is up and signal
#				16 to indicate that the network is down.
#
#  updateDNS   exec string      A string enclosed in quites to indicate a
#				program to execute to update the DNS server
#				with the new IP address for the given name.
#				This string should include four %s's to
#				indicate the placement of the following
#				information from the dhcp client:
#
#		hostname - This is the value of option 12.
#			The value returned by the dhcp server, is used
#			if one is supplied.  Else, if the client specified
#			a value (in THIS file) the client requested value
#			is used.  If neither the client specified a
#			requested hostname nor the server supplied one,
#			this exec string will not be executed.
#
#		domainname - This is the value of option 15.
#			The value returned by the dhcp server, is used
#			if one is supplied.  Else, if the client specified
#			a value (in THIS file) the client requested value
#			is used.  If neither the client specified a
#			requested hostname nor the server supplied one,
#			A null string ("") will be supplied by dhcp.  Thus,
#			this value is deemed optional.
#
#		Ip Address - This is the IP address leased to this client
#			by the server.   The string is supplied in dotted 
#			notation, ie 9.2.23.43.
#
#		leasetime - This is the lease time granted by the server.
#			This string is a decimal number representing the
#			number of seconds of the lease.
#
#	These values are output by dhcp in this order: 
#		hostname domainname Ip Address leasetime
#
#	A script /usr/sbin/dhcpaction has been provided with this functionality
#	as well as actions to help NIM interact with DHCP clients.
#
#	/usr/sbin/dhcpaction hostname domainnaim ipaddress leasetime REC NIM
#	The first four parameters are what will be used to update the DNS
#	server.  The fifth parameter tells dhcpaction to update the A record,
#	the PTR record, or Both, or None.  The options are A, PTR, BOTH, NONE.
#	The sixth parameter is used to tell servers that NIM is being used
#	and processing needs to be done when a client changes address.  The
#	options for this are NIM and NONIM.  On clients, this needs to be
#	set to NONIM.
#
# option      <code> [<value>] [exec <string>]
#				An option requested by this client.  Its
#				scope is determined by whether it is inside
#				a set of curly braces for a particular
#				interface, or if it is outside all curly
#				braces.  If outside, it applies to all
#				interfaces.
#
#				Code is the option code of the option
#				requested.
#
#				Value is the requested value for that option.
#                               This value is passed to the server with the
#				option.  The value is not required.
#
#				The keyword exec denotes a string following
#				which should be executed if this option
#				is returned by the server.  This string
#				is expected to be an executable shell script
#				or program.  A "%s" may be included in the
#				string.  If present, the value returned by
#				the server will be provided in ascii.
#
#  vendor			Special syntax for the specification of
#				the vendor extensions field.  Is it followed
#				by a set of curly braces.  Inside the
#				curly braces, the options and values for
#				the vendor extensions field are specified.
#				An exec function for the vendor option should
#				be placed on the same line as the "vendor" keyword,
#				using the same syntax as on the other option lines.
#				The exec string on an option inside the
#				vendor extensions options is not valid.  It
#				is ignored.
#
#  reject <code>		Specified that if this option code is
#				returned by the server, this option
#				should be ignored by the client.  Its
#				value should not be used.
#
#  otherOptions	accept or reject	
#				Specifies how all other options should
#				be handled by the client.  This refers
#				to any options not specifically requested
#				with an "option" statement or rejected
#				with a "reject" statement.  The default
#				is that all options are accepted.
#
#
#

#sniffer "ifsniff -c -itr0"
#option 60 foo
updateDNS "/usr/sbin/dhcpaction '%s' '%s' '%s' '%s' A NONIM >> /tmp/updns.out 2>&1 "
clientid MAC

